"use strict";(self.webpackChunkdocsv_2=self.webpackChunkdocsv_2||[]).push([[3847],{7214:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>u,contentTitle:()=>l,default:()=>p,frontMatter:()=>c,metadata:()=>o,toc:()=>d});var r=n(5893),t=n(1151),i=n(9286);const s="public class AccessArea {\n    public static void main(String[] args) {\n    Rectangle rec =new Rectangle();\n    Square sq=new Square();\n    System.out.println(rec.getArea(2,3));\n    System.out.println(sq.getArea(5));\n    }\n}\nclass Rectangle{\n    int area;\n    public int getArea(int l,int b) {\n        area=l*b;\n        return area;\n    }\n}\nclass Square{\n    int area;\n    public int getArea(int a) {\n        area=a*a;\n        return area;\n    }\n}",c={sidebar_position:3,description:"Rectangle Square Area in Java"},l="Rectangle Square Area",o={id:"java/Rectangle",title:"Rectangle Square Area",description:"Rectangle Square Area in Java",source:"@site/docs/three/java/Rectangle.mdx",sourceDirName:"java",slug:"/java/Rectangle",permalink:"/docs/three/java/Rectangle",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3,description:"Rectangle Square Area in Java"},sidebar:"tutorialSidebar",previous:{title:"Prime Numbers from 1 to 1000",permalink:"/docs/three/java/Prime"},next:{title:"Overloading Area Method",permalink:"/docs/three/java/Overload"}},u={},d=[{value:"CODE",id:"code",level:2}];function g(e){const a={h1:"h1",h2:"h2",...(0,t.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(a.h1,{id:"rectangle-square-area",children:"Rectangle Square Area"}),"\n",(0,r.jsx)(a.h2,{id:"code",children:"CODE"}),"\n",(0,r.jsx)(i.Z,{language:"java",children:s})]})}function p(e={}){const{wrapper:a}={...(0,t.a)(),...e.components};return a?(0,r.jsx)(a,{...e,children:(0,r.jsx)(g,{...e})}):g(e)}}}]);