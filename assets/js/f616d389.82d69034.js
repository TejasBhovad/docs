"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5313],{5654:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>u,frontMatter:()=>o,metadata:()=>d,toc:()=>c});var i=n(7462),r=(n(7294),n(3905)),a=n(814);const o={sidebar_position:7,description:"Matrix"},s="Palindrome",d={unversionedId:"java/Palindrome",id:"java/Palindrome",title:"Palindrome",description:"Matrix",source:"@site/docs/java/Palindrome.mdx",sourceDirName:"java",slug:"/java/Palindrome",permalink:"/docs/java/Palindrome",draft:!1,tags:[],version:"current",sidebarPosition:7,frontMatter:{sidebar_position:7,description:"Matrix"},sidebar:"tutorialSidebar",previous:{title:"Matrix",permalink:"/docs/java/Matrix"},next:{title:"Inheritance",permalink:"/docs/java/Inheritance"}},l={},c=[{value:"CODE",id:"code",level:2}],m={toc:c};function u(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,i.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"palindrome"},"Palindrome"),(0,r.kt)("h2",{id:"code"},"CODE"),(0,r.kt)(a.Z,{language:"java",mdxType:"CodeBlock"},'// WAP to check if a string is palindrome or not using string buffer\nclass Palindrome {\n    public static void main(String args[]) {\n        String str = "madam";\n        StringBuffer sb = new StringBuffer(str);\n        String rev = sb.reverse().toString();\n        if (str.equals(rev))\n            System.out.println("Palindrome");\n        else\n            System.out.println("Not Palindrome");\n    }\n}\n'))}u.isMDXComponent=!0}}]);