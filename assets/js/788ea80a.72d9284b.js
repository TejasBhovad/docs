"use strict";(self.webpackChunkdocsv_2=self.webpackChunkdocsv_2||[]).push([[585],{9096:(n,i,e)=>{e.r(i),e.d(i,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>a,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"python/two","title":"Day Two","description":"List Python","source":"@site/docs/training/python/two.mdx","sourceDirName":"python","slug":"/python/two","permalink":"/docs/training/python/two","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"title":"Day Two","sidebar_position":2,"description":"List Python"},"sidebar":"tutorialSidebar","previous":{"title":"Day One","permalink":"/docs/training/python/one"}}');var s=e(4848),l=e(8453),r=e(8731);const a={title:"Day Two",sidebar_position:2,description:"List Python"},o="Python",c={},d=[{value:"List Basics",id:"list-basics",level:2},{value:"Maximum Element",id:"maximum-element",level:2},{value:"Other method",id:"other-method",level:3},{value:"Move Zeros from List to End",id:"move-zeros-from-list-to-end",level:2},{value:"Kth maximum element",id:"kth-maximum-element",level:2},{value:"Conditional List iterations",id:"conditional-list-iterations",level:2},{value:"Check if input is number, alphabet or space",id:"check-if-input-is-number-alphabet-or-space",level:2},{value:"Common Elements in two lists",id:"common-elements-in-two-lists",level:2},{value:"First Non repeating character",id:"first-non-repeating-character",level:2},{value:"Other method",id:"other-method-1",level:3},{value:"Calculate the count of Negative and Positive numbers in a list",id:"calculate-the-count-of-negative-and-positive-numbers-in-a-list",level:2},{value:"Find the no of repeating numbers",id:"find-the-no-of-repeating-numbers",level:2},{value:"Alternate method",id:"alternate-method",level:3},{value:"Alternate method",id:"alternate-method-1",level:3},{value:"Anagram(both str contains same letters)",id:"anagramboth-str-contains-same-letters",level:2},{value:"Pangram (contains all letters)",id:"pangram-contains-all-letters",level:2},{value:"Remove duplicates from String",id:"remove-duplicates-from-string",level:2}];function p(n){const i={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",pre:"pre",...(0,l.R)(),...n.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(i.header,{children:(0,s.jsx)(i.h1,{id:"python",children:(0,s.jsx)(r.A,{name:"banner",description:"Day Two",children:"Python"})})}),"\n",(0,s.jsx)(i.h2,{id:"list-basics",children:"List Basics"}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-python",children:'l = ["Tejas", "A", "b", "c", 98, 78.34, "hello"]\nprint(l)\nprint(type(l))\nprint(l[0])\nprint(l[1])\nprint(l[-1])\nprint(l[-2])\nprint(l[:3])\nprint(l[3:])\nprint(l[2:5:2])\nl[0] = "HELLO"\nprint(l[0])\nl.append("Appended")\nprint(l)\nl.insert(2, "hhelo")\nl.insert(5, 3)\nprint(l)\nl.remove("HELLO")\nprint(l)\ncplist = l.copy()\nprint(cplist)\ntl = [[1, 2, 3], ["a", "b", "c"]]\nr = 0\nc = 2\nprint(tl[r][c])\n\nl1 = ["secret", "santa"]\nprint(l1*2)\nl2 = [1, 2]\nprint(l1+l2)\ndel l1\nl2.clear\nprint(l2)\n\nmyname = list("Tejas")\nprint(myname)\n\nunsorted_list = [1,2,4,2,34,32,1]\nunsorted_list.sort(reverse=True)\nprint(unsorted_list)\n\noglist = [12,34,56]\npointingList = oglist\nprint(id(oglist))\nprint(id(pointingList))\n\n# char ops\nprint(\'Sej@123\'.isalnum())\nprint(\'JohnDoe\'.isalpha())\nprint(\'899\'.isdigit())\nprint("".islower())\nprint("hello world".isspace())\nprint(" ".isspace())\n\nl = [1,2,3,4,4,4]\nl.count(4)\n'})}),"\n",(0,s.jsx)(i.h1,{id:"problems",children:"Problems"}),"\n",(0,s.jsx)(i.h2,{id:"maximum-element",children:"Maximum Element"}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-python",children:"list = [ 3,3,4,2,4,4,2,4,4]\nmin,max=0,0\nfor i in list:\n    if i in dict:\n        dict[i] += 1\n    else:\n        dict[i] = 1\nprint(dict)\nmax = -1\nfor i,j in dict.items():\n    if j > max:\n        max = j\n        max_key = i\nprint(max_key)\n"})}),"\n",(0,s.jsx)(i.h3,{id:"other-method",children:"Other method"}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-python",children:'list = [ 3,3,4,2,4,4,2,4,4]\nmin,max=list[0],list[0]\nmaxIdx,minIdx=0,0\nfor i in range(len(list)):\nif max > list[i]:\nmax = list[i]\nmaxIdx=i\nif min < list[i]:\nmin=list[i]\nminIdx=i\nprint("Max",maxIdx,"VALUE",max)\nprint("Min",minIdx,"VALUE",min)\n'})}),"\n",(0,s.jsx)(i.h2,{id:"move-zeros-from-list-to-end",children:"Move Zeros from List to End"}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-python",children:"\nlist = [0,0,34,4,4,5,5]\nlen_list  = len(list)\nnew_list=[]\nfor i in list:\n    if (i!=0):\n        new_list.append(i)\nfor i in range(0,(len_list-len(new_list))):\n    new_list.append(0)\nprint(new_list)\n"})}),"\n",(0,s.jsx)(i.h2,{id:"kth-maximum-element",children:"Kth maximum element"}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-python",children:"list = [3,2,1,5,6,4]\nk=2\n# list.sort()\n# print(list)\n# k=2\n# print(list[len(list)-k])\n\ndef find_max(list):\n    max=list[0]\n    for i in range(len(list)):\n        if max < list[i]:\n            max = list[i]\n    # print(max)\n    return max\n\n\nfor i in range(k):\n    max=find_max(list)\n    list.remove(max)\n\nprint(list)\nprint(find_max(list))\n"})}),"\n",(0,s.jsx)(i.h2,{id:"conditional-list-iterations",children:"Conditional List iterations"}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-python",children:'budget =500\ncart = [10,100,200,600,400]\nfor itm in cart:\n    if itm>budget:\n        print("Not sufficient budget")\n        continue\n    print(itm)\nelse:\n    print("u purchased everything")\n'})}),"\n",(0,s.jsx)(i.h2,{id:"check-if-input-is-number-alphabet-or-space",children:"Check if input is number, alphabet or space"}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-python",children:'x= input()\nif(x.isdigit()):\n    print("Digit")\nif(x.isalpha()):\n    print("Alphabet")\nif(x.isspace()):\n    print("Space")\n'})}),"\n",(0,s.jsx)(i.h2,{id:"common-elements-in-two-lists",children:"Common Elements in two lists"}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-python",children:"lista = [ 1,2,3,4]\nlistb = [3,4,5,6]\nlista.sort()\nlistb.sort()\nlistc=[]\n\nfor j in listb:\n    if j in lista:\n        print(j)\n        listc.append(j)\n    else:\n        break\nprint(listc)\n"})}),"\n",(0,s.jsx)(i.h2,{id:"first-non-repeating-character",children:"First Non repeating character"}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-python",children:"list = [1,2,3,5,2,1]\ndict={}\nfor i in list:\n    if i in dict:\n        dict[i] += 1\n    else:\n        dict[i] = 1\nprint(dict)\n\nfor i in list:\n    if (dict[i]<2):\n        print(i,dict[i])\n        break\n"})}),"\n",(0,s.jsx)(i.h3,{id:"other-method-1",children:"Other method"}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-python",children:"list = [1,2,3,5,2,1]\ndict={}\nfor i in list:\n    if list.count(i)==1:\n        print(i)\n        break\n"})}),"\n",(0,s.jsx)(i.h2,{id:"calculate-the-count-of-negative-and-positive-numbers-in-a-list",children:"Calculate the count of Negative and Positive numbers in a list"}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-python",children:'list = [1,2,3,4,-3,-45]\ne=0\no=0\nfor i in list:\n    if(i<0):\n        e=e+1\n    elif(i>0):\n        o=o+1\n\nprint("POS",o)\nprint("NEG",e)\n'})}),"\n",(0,s.jsx)(i.h2,{id:"find-the-no-of-repeating-numbers",children:"Find the no of repeating numbers"}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-python",children:"# find no of repeating numbers from given number\ni = int(input())\nn=i\nlist=[]\ndict={}\nwhile (i>0):\n    list.append(i%10)\n    i=i//10\nctr=0\nprint(list)\nfor i in list:\n    if i in dict:\n        dict[i] += 1\n    else:\n        dict[i] = 1\nprint(dict)\n\nfor i,j in dict.items():\n    if j>1:\n        ctr=ctr+1\nprint(ctr)\n"})}),"\n",(0,s.jsx)(i.h3,{id:"alternate-method",children:"Alternate method"}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-python",children:"\nlist1 = [4, 3, 2, 3, 2, 1]\nseen = set()\n\nfor i in list1:\n    if i not in seen:\n        seen.add(i)\n\nprint(seen)\nclone = list1.copy()\nfor i in seen:\n        clone.remove(i)\nprint(len(clone))\n"})}),"\n",(0,s.jsx)(i.h3,{id:"alternate-method-1",children:"Alternate method"}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-python",children:"list1 = [4, 3, 2, 3, 2, 1]\ncache = [0,0,0,0,0,0,0,0,0]\nfor i in range(len(list1)):\n    cache[list1[i]]=cache[list1[i]]+1\nprint(cache)\nctr=0\nfor i in cache:\n    if cache[i]>1:\n        ctr=ctr+1\nprint(ctr)\n"})}),"\n",(0,s.jsx)(i.h2,{id:"anagramboth-str-contains-same-letters",children:"Anagram(both str contains same letters)"}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-python",children:'str1 = input()\nstr2 = input()\n\nlist1= list(str1)\nlist2= list(str2)\nlist1.sort()\nlist2.sort()\nprint(list1)\nprint(list2)\nif(list1 == list2):\n    print("Anagram")\n'})}),"\n",(0,s.jsx)(i.h2,{id:"pangram-contains-all-letters",children:"Pangram (contains all letters)"}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-python",children:'str = input()\nseenAlpha= set()\nstrList= list(str.lower())\nfor i in strList:\n    if i not in seenAlpha:\n        seenAlpha.add(i)\nprint(seenAlpha)\nif(len(seenAlpha)==27 or len(seenAlpha)==26):\n    print("Y")\nelse:\n    print("N")\n'})}),"\n",(0,s.jsx)(i.h2,{id:"remove-duplicates-from-string",children:"Remove duplicates from String"}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-python",children:'str = "Programming"\n# seenAlpha= set()\nstrList= list(str.lower())\nliststr=[]\nfor i in strList:\n    if i not in liststr:\n\n        liststr.append(i)\n\nprint("".join(liststr))\n'})}),"\n",(0,s.jsx)(i.h1,{id:"count-the-frequency-of-substring",children:"Count the frequency of substring"}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-python",children:'sub = "str"\nogstring = "stroriginalstring"\nprint(ogstring.count(sub))\n'})})]})}function h(n={}){const{wrapper:i}={...(0,l.R)(),...n.components};return i?(0,s.jsx)(i,{...n,children:(0,s.jsx)(p,{...n})}):p(n)}},8731:(n,i,e)=>{e.d(i,{A:()=>l});e(6540);var t=e(6025),s=e(4848);const l=n=>{let{name:i,description:e,children:l}=n;const r=(0,t.Ay)(`/images/${i}.jpg`);return(0,s.jsxs)("div",{style:{display:"inline-block",height:"150px",width:"100%",position:"relative",overflow:"hidden",borderRadius:"5px"},children:[(0,s.jsx)("img",{src:r,alt:r,style:{width:"100%",height:"100%",objectFit:"cover",position:"absolute",zIndex:-1}}),(0,s.jsx)("h2",{style:{color:"white",padding:"12px",boxSizing:"border-box",paddingBottom:"0px",fontWeight:"500"},children:l}),(0,s.jsx)("p",{style:{color:"white",paddingTop:"0px",paddingBottom:"12px",paddingLeft:"12px",paddingRight:"12px",boxSizing:"border-box"},children:e})]})}},8453:(n,i,e)=>{e.d(i,{R:()=>r,x:()=>a});var t=e(6540);const s={},l=t.createContext(s);function r(n){const i=t.useContext(l);return t.useMemo((function(){return"function"==typeof n?n(i):{...i,...n}}),[i,n])}function a(n){let i;return i=n.disableParentContext?"function"==typeof n.components?n.components(s):n.components||s:r(n.components),t.createElement(l.Provider,{value:i},n.children)}}}]);