"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[924],{3024:(i,n,e)=>{e.r(n),e.d(n,{assets:()=>d,contentTitle:()=>s,default:()=>l,frontMatter:()=>r,metadata:()=>c,toc:()=>b});var t=e(7462),a=(e(7294),e(3905)),o=e(814);const r={sidebar_position:7,description:"Fibonacci series in Java"},s="Fibonacci series",c={unversionedId:"java/other/Fibonnaci",id:"java/other/Fibonnaci",title:"Fibonacci series",description:"Fibonacci series in Java",source:"@site/docs/java/other/Fibonnaci.mdx",sourceDirName:"java/other",slug:"/java/other/Fibonnaci",permalink:"/docs/java/other/Fibonnaci",draft:!1,tags:[],version:"current",sidebarPosition:7,frontMatter:{sidebar_position:7,description:"Fibonacci series in Java"},sidebar:"tutorialSidebar",previous:{title:"Factorial",permalink:"/docs/java/other/Factorial"},next:{title:"Count Digits",permalink:"/docs/java/other/Digits"}},d={},b=[{value:"CODE",id:"code",level:2}],u={toc:b};function l(i){let{components:n,...e}=i;return(0,a.kt)("wrapper",(0,t.Z)({},u,e,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"fibonacci-series"},"Fibonacci series"),(0,a.kt)("h2",{id:"code"},"CODE"),(0,a.kt)(o.Z,{language:"java",mdxType:"CodeBlock"},'// WAP to print fibonacci series using recursion\npublic class Fibonacci {\n    int fib(int n) {\n        if (n == 0)\n            return 0;\n        else if (n == 1)\n            return 1;\n\n        return fib(n - 1) + fib(n - 2);\n    }\n\n    public static void main(String[] args) {\n        Fibonacci f = new Fibonacci();\n        System.out.println("Fibonacci series: ");\n        for (int i = 0; i < 10; i++)\n            System.out.print(f.fib(i)+" ");\n    }\n}\n'))}l.isMDXComponent=!0}}]);