"use strict";(self.webpackChunkdocsv_2=self.webpackChunkdocsv_2||[]).push([[5026],{4639:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>u,frontMatter:()=>s,metadata:()=>m,toc:()=>d});var a=i(5893),r=i(1151),o=i(9286);const t="class Complex {\n    int real,imaginary;\n    char c='+';\n    Complex(){\n        real=imaginary=0;\n    }\n    Complex(int r,int i){\n        real=r;\n        imaginary=i;\n        c='+';\n    }\n    void show(){\n        if(imaginary<0)\n            c='-';\n\n        System.out.println(real+\" \"+c+\" \" +imaginary+\"i\");\n    }\n    Complex add(Complex c1,Complex c2){\n        Complex sum=new Complex();\n        sum.imaginary=c1.imaginary+c2.imaginary;\n        sum.real=c1.real+c2.real;\n        return sum;\n    }\n}\nclass ComplexNumber{\n    public static void main(String[] args) {\n        Complex c1=new Complex(1,2);\n        Complex c2=new Complex(3,5);\n        c1.show();\n        c2.show();\n        Complex sum;\n        sum=c1.add(c1,c2);\n        sum.show();\n    }\n}\n",s={sidebar_position:5,description:"Complex number addition"},l="Complex Number Addition",m={id:"java/Complex",title:"Complex Number Addition",description:"Complex number addition",source:"@site/docs/three/java/Complex.mdx",sourceDirName:"java",slug:"/java/Complex",permalink:"/docs/three/java/Complex",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5,description:"Complex number addition"},sidebar:"tutorialSidebar",previous:{title:"Overloading Area Method",permalink:"/docs/three/java/Overload"},next:{title:"Matrix",permalink:"/docs/three/java/Matrix"}},c={},d=[{value:"CODE",id:"code",level:2}];function p(e){const n={h1:"h1",h2:"h2",...(0,r.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h1,{id:"complex-number-addition",children:"Complex Number Addition"}),"\n",(0,a.jsx)(n.h2,{id:"code",children:"CODE"}),"\n",(0,a.jsx)(o.Z,{language:"java",children:t})]})}function u(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(p,{...e})}):p(e)}}}]);