"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5665],{8569:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>m,contentTitle:()=>s,default:()=>c,frontMatter:()=>o,metadata:()=>l,toc:()=>d});var t=i(7462),r=(i(7294),i(3905)),a=i(814);const o={sidebar_position:5,description:"Palindrome problem"},s="Palindrome problem",l={unversionedId:"java/assignment/palindrome",id:"java/assignment/palindrome",title:"Palindrome problem",description:"Palindrome problem",source:"@site/docs/java/assignment/palindrome.mdx",sourceDirName:"java/assignment",slug:"/java/assignment/palindrome",permalink:"/docs/java/assignment/palindrome",draft:!1,tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5,description:"Palindrome problem"},sidebar:"tutorialSidebar",previous:{title:"Exception problem",permalink:"/docs/java/assignment/exception"},next:{title:"GUI problem",permalink:"/docs/java/assignment/gui"}},m={},d=[{value:"CODE",id:"code",level:2}],p={toc:d};function c(e){let{components:n,...i}=e;return(0,r.kt)("wrapper",(0,t.Z)({},p,i,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"palindrome-problem"},"Palindrome problem"),(0,r.kt)("h2",{id:"code"},"CODE"),(0,r.kt)(a.Z,{language:"java",mdxType:"CodeBlock"},'// WAP to check if a string is palindrome or not using string buffer\nclass Palindrome {\n    public static void main(String args[]) {\n        String str = "madam";\n        StringBuffer sb = new StringBuffer(str);\n        String rev = sb.reverse().toString();\n        if (str.equals(rev))\n            System.out.println("Palindrome");\n        else\n            System.out.println("Not Palindrome");\n    }\n}\n'))}c.isMDXComponent=!0}}]);