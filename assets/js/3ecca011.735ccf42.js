"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[613],{9739:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>d,contentTitle:()=>c,default:()=>p,frontMatter:()=>s,metadata:()=>i,toc:()=>u});var a=n(7462),o=(n(7294),n(3905)),r=n(814);const s={sidebar_position:4,description:"Area using constructors in Java"},c="Constuctor Area",i={unversionedId:"java/other/RectCon",id:"java/other/RectCon",title:"Constuctor Area",description:"Area using constructors in Java",source:"@site/docs/java/other/RectCon.mdx",sourceDirName:"java/other",slug:"/java/other/RectCon",permalink:"/docs/java/other/RectCon",draft:!1,tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4,description:"Area using constructors in Java"},sidebar:"tutorialSidebar",previous:{title:"Overloading Methods",permalink:"/docs/java/other/PlusMethod"},next:{title:"Constuctor Student",permalink:"/docs/java/other/StudentCon"}},d={},u=[{value:"CODE",id:"code",level:2}],l={toc:u};function p(t){let{components:e,...n}=t;return(0,o.kt)("wrapper",(0,a.Z)({},l,n,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"constuctor-area"},"Constuctor Area"),(0,o.kt)("h2",{id:"code"},"CODE"),(0,o.kt)(r.Z,{language:"java",mdxType:"CodeBlock"},'// WAP to create class rectangle and calculate area and perimeter of rectangle using constructors\npublic class Rectangle {\n    Rectangle(int length, int breadth) {\n        System.out.println("Area: " + length * breadth);\n        System.out.println("Perimeter: " + 2 * (length + breadth));\n    }\n\n    public static void main(String[] args) {\n        Rectangle r = new Rectangle(10, 20);\n    }\n}\n'))}p.isMDXComponent=!0}}]);