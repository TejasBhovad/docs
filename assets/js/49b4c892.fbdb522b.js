"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5561],{8695:(a,t,i)=>{i.r(t),i.d(t,{assets:()=>l,contentTitle:()=>c,default:()=>p,frontMatter:()=>r,metadata:()=>s,toc:()=>d});var o=i(7462),n=(i(7294),i(3905)),e=i(814);const r={sidebar_position:6,description:"Factorial in Java"},c="Factorial",s={unversionedId:"java/other/Factorial",id:"java/other/Factorial",title:"Factorial",description:"Factorial in Java",source:"@site/docs/java/other/Factorial.mdx",sourceDirName:"java/other",slug:"/java/other/Factorial",permalink:"/docs/java/other/Factorial",draft:!1,tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6,description:"Factorial in Java"},sidebar:"tutorialSidebar",previous:{title:"Constuctor Student",permalink:"/docs/java/other/StudentCon"},next:{title:"Fibonacci series",permalink:"/docs/java/other/Fibonnaci"}},l={},d=[{value:"CODE",id:"code",level:2}],u={toc:d};function p(a){let{components:t,...i}=a;return(0,n.kt)("wrapper",(0,o.Z)({},u,i,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"factorial"},"Factorial"),(0,n.kt)("h2",{id:"code"},"CODE"),(0,n.kt)(e.Z,{language:"java",mdxType:"CodeBlock"},'// WAP to print factorial of a number using recursion\npublic class Factorial {\n    int fact(int n) {\n        if (n == 1)\n            return 1;\n        else\n            return n * fact(n - 1);\n    }\n\n   public static void main(String[] args) {\n        Factorial f = new Factorial();\n        System.out.println("Factorial of 5 is: " + f.fact(5));\n    }\n}\n'))}p.isMDXComponent=!0}}]);