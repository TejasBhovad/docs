"use strict";(self.webpackChunkdocsv_2=self.webpackChunkdocsv_2||[]).push([[778],{1755:(n,r,e)=>{e.r(r),e.d(r,{assets:()=>c,contentTitle:()=>d,default:()=>u,frontMatter:()=>l,metadata:()=>t,toc:()=>b});const t=JSON.parse('{"id":"algorithms/bubbleSort","title":"Bubble Sort","description":"Bubble Sort in C","source":"@site/docs/three/algorithms/bubbleSort.mdx","sourceDirName":"algorithms","slug":"/algorithms/bubbleSort","permalink":"/docs/three/algorithms/bubbleSort","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2,"description":"Bubble Sort in C"},"sidebar":"tutorialSidebar","previous":{"title":"Linear Search","permalink":"/docs/three/algorithms/linearSearch"},"next":{"title":"Selection Sort","permalink":"/docs/three/algorithms/selectionSort"}}');var i=e(4848),o=e(8453),s=e(1432);const a='#include <stdio.h>\n\nint i, j, k, ar[10];\nvoid read()\n{\n    printf("\\n");\n    for (i = 0; i < 5; i++)\n    {\n        printf("Enter %d Element: ", i);\n        scanf("%d", &ar[i]);\n    }\n}\nvoid display()\n{\n    printf("\\n");\n    for (k = 0; k < 5; k++)\n    {\n        printf("%d ", ar[k]);\n    }\n}\nvoid sort()\n{\n    int tmp;\n    for (i = 0; i < 5; i++)\n    {\n        for (j = 0; j < 5 - 1 - i; j++)\n        {\n            if (ar[j] > ar[j + 1])\n            {\n                tmp = ar[j];\n                ar[j] = ar[j + 1];\n                ar[j + 1] = tmp;\n            }\n            display();\n        }\n    }\n}\nint main()\n{\n    read();\n    display();\n    sort();\n    display();\n    printf("\\n");\n    return 0;\n}\n\n// 5 4 3 2 1 \n// 4 5 3 2 1 \n// 4 3 5 2 1 \n// 4 3 2 5 1 \n// 4 3 2 1 5 \n// 3 4 2 1 5 \n// 3 2 4 1 5 \n// 3 2 1 4 5 \n// 2 3 1 4 5 \n// 2 1 3 4 5 \n// 1 2 3 4 5 \n// 1 2 3 4 5 // display final',l={sidebar_position:2,description:"Bubble Sort in C"},d="Bubble Sort",c={},b=[{value:"CODE",id:"code",level:2}];function h(n){const r={h1:"h1",h2:"h2",header:"header",...(0,o.R)(),...n.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(r.header,{children:(0,i.jsx)(r.h1,{id:"bubble-sort",children:"Bubble Sort"})}),"\n",(0,i.jsx)(r.h2,{id:"code",children:"CODE"}),"\n",(0,i.jsx)(s.A,{language:"c",children:a})]})}function u(n={}){const{wrapper:r}={...(0,o.R)(),...n.components};return r?(0,i.jsx)(r,{...n,children:(0,i.jsx)(h,{...n})}):h(n)}}}]);