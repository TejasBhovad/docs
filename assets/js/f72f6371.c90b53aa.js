"use strict";(self.webpackChunkdocsv_2=self.webpackChunkdocsv_2||[]).push([[559],{2730:(n,t,i)=>{i.r(t),i.d(t,{assets:()=>m,contentTitle:()=>c,default:()=>x,frontMatter:()=>d,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"java/Matrix","title":"Matrix","description":"Matrix","source":"@site/docs/three/java/Matrix.mdx","sourceDirName":"java","slug":"/java/Matrix","permalink":"/docs/three/java/Matrix","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":6,"frontMatter":{"sidebar_position":6,"description":"Matrix"},"sidebar":"tutorialSidebar","previous":{"title":"Complex Number Addition","permalink":"/docs/three/java/Complex"},"next":{"title":"Palindrome","permalink":"/docs/three/java/Palindrome"}}');var e=i(4848),a=i(8453),s=i(1432);const o='import java.util.*;\npublic class Matrix {\n    int m,n;\n    int[][] matrix,transpose;\n    Scanner sc= new Scanner(System.in);\n    void readSize(){\n        System.out.println("Enter M: ");\n        m=sc.nextInt();\n        System.out.println("Enter N: ");\n        n=sc.nextInt();\n       matrix =new int[m][n];\n      transpose =new int[n][m];\n    }\n    void readMatrix(){\n        System.out.println("Enter Matrix: ");\n        for(int i=0;i<m;i++){\n            for(int j=0;j<n;j++){\n                System.out.println("Enter ["+i+"]["+j+"]");\n                matrix[i][j]=sc.nextInt();\n            }\n        }\n    }\n    void displayMatrix(){\n        System.out.println("Array: ");\n        for(int i=0;i<m;i++){\n            for(int j=0;j<n;j++){\n                System.out.print(matrix[i][j]+" ");\n            }\n            System.out.println();\n        }\n    }\n\n    void transposeMatrix(){\n        System.out.println("Transpose: ");\n        for(int i=0;i<n;i++){\n            for(int j=0;j<m;j++){\n                transpose[i][j]=matrix[j][i];\n                System.out.print(transpose[i][j]+" ");\n            }\n            System.out.println();\n        }\n    }\n}\nclass AccessMatrix{\n    public static void main(String[] args) {\n        Matrix m= new Matrix();\n        m.readSize();\n        m.readMatrix();\n        m.displayMatrix();\n        m.transposeMatrix();\n    }\n}\n',d={sidebar_position:6,description:"Matrix"},c="Matrix",m={},l=[{value:"CODE",id:"code",level:2}];function p(n){const t={h1:"h1",h2:"h2",header:"header",...(0,a.R)(),...n.components};return(0,e.jsxs)(e.Fragment,{children:[(0,e.jsx)(t.header,{children:(0,e.jsx)(t.h1,{id:"matrix",children:"Matrix"})}),"\n",(0,e.jsx)(t.h2,{id:"code",children:"CODE"}),"\n",(0,e.jsx)(s.A,{language:"java",children:o})]})}function x(n={}){const{wrapper:t}={...(0,a.R)(),...n.components};return t?(0,e.jsx)(t,{...n,children:(0,e.jsx)(p,{...n})}):p(n)}}}]);