"use strict";(self.webpackChunkdocsv_2=self.webpackChunkdocsv_2||[]).push([[9405],{9238:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>h,contentTitle:()=>l,default:()=>p,frontMatter:()=>i,metadata:()=>n,toc:()=>u});const n=JSON.parse('{"id":"java/other/PlusMethod","title":"Overloading Methods","description":"Overloading methods in Java","source":"@site/docs/three/java/other/PlusMethod.mdx","sourceDirName":"java/other","slug":"/java/other/PlusMethod","permalink":"/docs/three/java/other/PlusMethod","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3,"description":"Overloading methods in Java"},"sidebar":"tutorialSidebar","previous":{"title":"Student Details","permalink":"/docs/three/java/other/StudentDetail"},"next":{"title":"Constuctor Area","permalink":"/docs/three/java/other/RectCon"}}');var a=o(4848),s=o(8453),d=o(1432);const r='// Write a program to overload the\xa0plusMethod()\xa0method to work for both\xa0int\xa0and\xa0double\nclass PlusMethod {\n    void plusMethod(int a, int b) {\n        System.out.println("Sum of " + a + " and " + b + " is " + (a + b));\n    }\n\n    void plusMethod(double a, double b) {\n        System.out.println("Sum of " + a + " and " + b + " is " + (a + b));\n    }\n}\nclass PlusMethodMain {\n    public static void main(String[] args) {\n        PlusMethod pm = new PlusMethod();\n        pm.plusMethod(10, 20);\n        pm.plusMethod(10.5, 20.5);\n    }\n}\n',i={sidebar_position:3,description:"Overloading methods in Java"},l="Overloading Methods",h={},u=[{value:"CODE",id:"code",level:2}];function c(e){const t={h1:"h1",h2:"h2",header:"header",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.header,{children:(0,a.jsx)(t.h1,{id:"overloading-methods",children:"Overloading Methods"})}),"\n",(0,a.jsx)(t.h2,{id:"code",children:"CODE"}),"\n",(0,a.jsx)(d.A,{language:"java",children:r})]})}function p(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}}}]);