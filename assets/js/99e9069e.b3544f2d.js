"use strict";(self.webpackChunkdocsv_2=self.webpackChunkdocsv_2||[]).push([[5067],{7894:(t,a,n)=>{n.r(a),n.d(a,{assets:()=>d,contentTitle:()=>s,default:()=>p,frontMatter:()=>c,metadata:()=>l,toc:()=>u});var i=n(5893),e=n(1151),r=n(9286);const o='// WAP to print factorial of a number using recursion\npublic class Factorial {\n    int fact(int n) {\n        if (n == 1)\n            return 1;\n        else\n            return n * fact(n - 1);\n    }\n\n   public static void main(String[] args) {\n        Factorial f = new Factorial();\n        System.out.println("Factorial of 5 is: " + f.fact(5));\n    }\n}\n',c={sidebar_position:6,description:"Factorial in Java"},s="Factorial",l={id:"java/other/Factorial",title:"Factorial",description:"Factorial in Java",source:"@site/docs/three/java/other/Factorial.mdx",sourceDirName:"java/other",slug:"/java/other/Factorial",permalink:"/docs/three/java/other/Factorial",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6,description:"Factorial in Java"},sidebar:"tutorialSidebar",previous:{title:"Constuctor Student",permalink:"/docs/three/java/other/StudentCon"},next:{title:"Fibonacci series",permalink:"/docs/three/java/other/Fibonnaci"}},d={},u=[{value:"CODE",id:"code",level:2}];function h(t){const a={h1:"h1",h2:"h2",...(0,e.a)(),...t.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(a.h1,{id:"factorial",children:"Factorial"}),"\n",(0,i.jsx)(a.h2,{id:"code",children:"CODE"}),"\n",(0,i.jsx)(r.Z,{language:"java",children:o})]})}function p(t={}){const{wrapper:a}={...(0,e.a)(),...t.components};return a?(0,i.jsx)(a,{...t,children:(0,i.jsx)(h,{...t})}):h(t)}}}]);