"use strict";(self.webpackChunkdocsv_2=self.webpackChunkdocsv_2||[]).push([[3946],{393:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>p,frontMatter:()=>d,metadata:()=>u,toc:()=>o});var a=t(5893),r=t(1151),i=t(9286);const s='import java.util.*;\n\npublic class Multithread {\n    public static void main(String[] args) {\n        Reader r = new Reader();\n        Thread readerThread = new Thread(r);\n        readerThread.start();\n    }\n}\n\nclass Reader implements Runnable {\n    public void run() {\n        Scanner sc = new Scanner(System.in);\n        System.out.println("Enter a number: ");\n        int n = sc.nextInt();\n        Thread Square = new Thread(new Square(n));\n        Square.start();\n    }\n}\n\nclass Square implements Runnable {\n    int x;\n\n    Square(int n) {\n        x = n;\n    }\n\n    public void run() {\n        int sqr = x * x;\n        System.out.println("Square: " + sqr);\n    }\n}\n',d={sidebar_position:11,description:"Multiple threads in Java"},l="Multi Threading",u={id:"java/Multithread",title:"Multi Threading",description:"Multiple threads in Java",source:"@site/docs/three/java/Multithread.mdx",sourceDirName:"java",slug:"/java/Multithread",permalink:"/docs/three/java/Multithread",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:11,frontMatter:{sidebar_position:11,description:"Multiple threads in Java"},sidebar:"tutorialSidebar",previous:{title:"Exceptions",permalink:"/docs/three/java/Exception"},next:{title:"Calculator",permalink:"/docs/three/java/Calculator"}},c={},o=[{value:"CODE",id:"code",level:2}];function h(e){const n={h1:"h1",h2:"h2",...(0,r.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h1,{id:"multi-threading",children:"Multi Threading"}),"\n",(0,a.jsx)(n.h2,{id:"code",children:"CODE"}),"\n",(0,a.jsx)(i.Z,{language:"java",children:s})]})}function p(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(h,{...e})}):h(e)}}}]);