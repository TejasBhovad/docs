"use strict";(self.webpackChunkdocsv_2=self.webpackChunkdocsv_2||[]).push([[7829],{2135:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>p,contentTitle:()=>d,default:()=>g,frontMatter:()=>l,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"ivp/one","title":"Experiment 1","description":"Getting familiar with RStudio","source":"@site/docs/six/ivp/one.mdx","sourceDirName":"ivp","slug":"/ivp/one","permalink":"/docs/six/ivp/one","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"title":"Experiment 1","sidebar_position":1,"description":"Getting familiar with RStudio"},"sidebar":"tutorialSidebar","previous":{"title":"Image and Video Processing","permalink":"/docs/six/category/image-and-video-processing"},"next":{"title":"Cryptography and Network Security","permalink":"/docs/six/category/cryptography-and-network-security"}}');var a=i(4848),o=i(8453),r=i(3942),s=i(8731);const l={title:"Experiment 1",sidebar_position:1,description:"Getting familiar with RStudio"},d="Experiment 1",p={},c=[{value:"Addition and Subtraction of Images",id:"addition-and-subtraction-of-images",level:2},{value:"Output",id:"output",level:3},{value:"Image Multiplication and Division",id:"image-multiplication-and-division",level:2},{value:"Output",id:"output-1",level:3},{value:"Image Boolean Operations",id:"image-boolean-operations",level:2},{value:"Output",id:"output-2",level:3},{value:"More boolean operations",id:"more-boolean-operations",level:2},{value:"Output",id:"output-3",level:3}];function u(n){const e={blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",p:"p",pre:"pre",...(0,o.R)(),...n.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(e.header,{children:(0,a.jsx)(e.h1,{id:"experiment-1",children:(0,a.jsx)(s.A,{name:"banner",description:"Basics of Matlab",children:"Experiment 1"})})}),"\n",(0,a.jsxs)(e.blockquote,{children:["\n",(0,a.jsx)(e.p,{children:"Basic Operations on Small Images using MATLAB"}),"\n"]}),"\n",(0,a.jsx)(r.A,{filename:"ivp_one.zip",children:"Download CSV"}),"\n",(0,a.jsx)(e.h2,{id:"addition-and-subtraction-of-images",children:"Addition and Subtraction of Images"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-matlab",children:"clc\nset(0, 'DefaultFigureRenderer', 'painters')\n% IGNORE TILL HERE (ONLY FOR UBUNTU)\n\n% Save subplot in variable\nh = figure;\nx = imread('Documents/MATLAB/pix1.png')\ny = imread('Documents/MATLAB/pix4.png')\n% Top left: Original Image x\nsubplot(2,2,1);\nimshow(x);\ntitle('Image x');\n\n% Top right: Original Image y\nsubplot(2,2,2);\nimshow(y);\ntitle('Image y');\n\n% Bottom left: Image Addition\nsubplot(2,2,3);\na = imadd(x,y);\nimshow(a);\ntitle('Image Addition (x + y)');\n\n% Bottom right: Image Subtraction\nsubplot(2,2,4);\nb = imsubtract(x,y);\nimshow(b);\ntitle('Image Subtraction (x - y)');\n\n% Save figure to variable h\n\n\n"})}),"\n",(0,a.jsx)(e.h3,{id:"output",children:"Output"}),"\n",(0,a.jsx)(e.h1,{id:""}),"\n",(0,a.jsx)(e.p,{children:(0,a.jsx)(e.img,{alt:"Output",src:i(2380).A+"",width:"646",height:"786"})}),"\n",(0,a.jsx)(e.h2,{id:"image-multiplication-and-division",children:"Image Multiplication and Division"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-matlab",children:"% Image Multiplication and Division Script\nset(0, 'DefaultFigureRenderer', 'painters')\n% IGNORE TILL HERE (ONLY FOR UBUNTU)\n\n% Read images\nx = imread('pix1.png');\ny = imread('pix4.png');\n\n% Create figure with subplots\nh = figure;\n\n% Top left: Original Image x\nsubplot(2,2,1);\nimshow(x);\ntitle('Image x');\n\n% Top right: Original Image y\nsubplot(2,2,2);\nimshow(y);\ntitle('Image y');\n\n% Bottom left: Image Multiplication\nsubplot(2,2,3);\nc = immultiply(x, y);\nimshow(c);\ntitle('Image Multiplication');\n\n% Bottom right: Image Division\nsubplot(2,2,4);\nd = imdivide(x, y);\nimshow(d);\ntitle('Image Division');\n\n"})}),"\n",(0,a.jsx)(e.h3,{id:"output-1",children:"Output"}),"\n",(0,a.jsx)(e.p,{children:(0,a.jsx)(e.img,{alt:"Output",src:i(8637).A+"",width:"716",height:"786"})}),"\n",(0,a.jsx)(e.h2,{id:"image-boolean-operations",children:"Image Boolean Operations"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-matlab",children:"clc\nclear all\nclose all\nset(0, 'DefaultFigureRenderer', 'painters')\n% IGNORE TILL HERE (ONLY FOR UBUNTU)\n\n% Load Images\nx_path = 'Documents/MATLAB/pix1.png';\ny_path = 'Documents/MATLAB/pix4.png';\n\n% Read images\nx = imread(x_path);\ny = imread(y_path);\n\n% Ensure consistent image processing\nif size(x) ~= size(y)\n    y = imresize(y, size(x));\nend\n\n% Convert to grayscale if color images\nif size(x, 3) > 1\n    x = rgb2gray(x);\n    y = rgb2gray(y);\nend\n\n% Normalize images to binary\nx_binary = imbinarize(x);\ny_binary = imbinarize(y);\n\n% Create visualization figure\nh = figure('Name', 'Image Logical Operations', 'NumberTitle', 'off');\n\n% Original Images\nsubplot(2,2,1);\nimshow(x);\ntitle('Original Image x');\n\nsubplot(2,2,2);\nimshow(y);\ntitle('Original Image y');\n\n% Logical Operations\nsubplot(2,2,3);\nand_result = x_binary & y_binary;\nimshow(and_result);\ntitle('Logical AND (x & y)');\n\nsubplot(2,2,4);\nor_result = x_binary | y_binary;\nimshow(or_result);\ntitle('Logical OR (x | y)');\n\n% Adjust figure properties\nset(h, 'Position', [100, 100, 1000, 800]);\n\n"})}),"\n",(0,a.jsx)(e.h3,{id:"output-2",children:"Output"}),"\n",(0,a.jsx)(e.p,{children:(0,a.jsx)(e.img,{alt:"Output",src:i(8449).A+"",width:"716",height:"786"})}),"\n",(0,a.jsx)(e.h2,{id:"more-boolean-operations",children:"More boolean operations"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-matlab",children:"clc\nclear all\nclose all\nset(0, 'DefaultFigureRenderer', 'painters')\n% IGNORE TILL HERE (ONLY FOR UBUNTU)\n\n% Load Images\nx_path = 'Documents/MATLAB/pix1.png';\ny_path = 'Documents/MATLAB/pix4.png';\n\n% Read images\nx = imread(x_path);\ny = imread(y_path);\n\n% Ensure consistent image processing\nif size(x) ~= size(y)\n    y = imresize(y, size(x));\nend\n\n% Convert to grayscale if color images\nif size(x, 3) > 1\n    x = rgb2gray(x);\n    y = rgb2gray(y);\nend\n\n% Normalize images to binary\nx_binary = imbinarize(x);\ny_binary = imbinarize(y);\n\n% Create visualization figure\nh = figure('Name', 'Advanced Binary Image Operations', 'NumberTitle', 'off');\n\n% Original Images\nsubplot(2,3,1);\nimshow(x_binary);\ntitle('Binary Image x');\n\nsubplot(2,3,2);\nimshow(y_binary);\ntitle('Binary Image y');\n\n% Advanced Binary Operators\nsubplot(2,3,3);\nxor_result = xor(x_binary, y_binary);\nimshow(xor_result);\ntitle('Logical XOR (x \u2295 y)');\n\nsubplot(2,3,4);\nnot_x = ~x_binary;\nimshow(not_x);\ntitle('Logical NOT (\xacx)');\n\nsubplot(2,3,5);\nnand_result = ~(x_binary & y_binary);\nimshow(nand_result);\ntitle('Logical NAND');\n\nsubplot(2,3,6);\nnor_result = ~(x_binary | y_binary);\nimshow(nor_result);\ntitle('Logical NOR');\n\n% Adjust figure properties\nset(h, 'Position', [100, 100, 1200, 800]);\n\n"})}),"\n",(0,a.jsx)(e.h3,{id:"output-3",children:"Output"}),"\n",(0,a.jsx)(e.p,{children:(0,a.jsx)(e.img,{alt:"Output",src:i(630).A+"",width:"716",height:"786"})})]})}function g(n={}){const{wrapper:e}={...(0,o.R)(),...n.components};return e?(0,a.jsx)(e,{...n,children:(0,a.jsx)(u,{...n})}):u(n)}},3942:(n,e,i)=>{i.d(e,{A:()=>r});i(6540);var t=i(6025),a=i(4848);const o={backgroundColor:"#4b8dcb",color:"#FFFFFF",padding:"10px 20px",borderRadius:"5px",textDecoration:"none",display:"inline-block",margin:"10px 0"},r=n=>{let{filename:e,children:i}=n;const r=(0,t.Ay)(`/assets/${e}`);return(0,a.jsx)(a.Fragment,{children:(0,a.jsx)("a",{href:r,download:!0,style:o,children:i})})}},8731:(n,e,i)=>{i.d(e,{A:()=>o});i(6540);var t=i(6025),a=i(4848);const o=n=>{let{name:e,description:i,children:o}=n;const r=(0,t.Ay)(`/images/${e}.jpg`);return(0,a.jsxs)("div",{style:{display:"inline-block",height:"150px",width:"100%",position:"relative",overflow:"hidden",borderRadius:"5px"},children:[(0,a.jsx)("img",{src:r,alt:r,style:{width:"100%",height:"100%",objectFit:"cover",position:"absolute",zIndex:-1}}),(0,a.jsx)("h2",{style:{color:"white",padding:"12px",boxSizing:"border-box",paddingBottom:"0px",fontWeight:"500"},children:o}),(0,a.jsx)("p",{style:{color:"white",paddingTop:"0px",paddingBottom:"12px",paddingLeft:"12px",paddingRight:"12px",boxSizing:"border-box"},children:i})]})}},2380:(n,e,i)=>{i.d(e,{A:()=>t});const t=i.p+"assets/images/add-bad3edde98e2d64108fccc80c214a7eb.jpg"},8449:(n,e,i)=>{i.d(e,{A:()=>t});const t=i.p+"assets/images/bool-50d8b5779565fe7e9132475b1e51350b.jpg"},630:(n,e,i)=>{i.d(e,{A:()=>t});const t=i.p+"assets/images/bool_two-e180c51473baca8726764c6c54f6078a.jpg"},8637:(n,e,i)=>{i.d(e,{A:()=>t});const t=i.p+"assets/images/multiply-d15195cd854396c2f3c83bfd1fb5dcfb.jpg"},8453:(n,e,i)=>{i.d(e,{R:()=>r,x:()=>s});var t=i(6540);const a={},o=t.createContext(a);function r(n){const e=t.useContext(o);return t.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function s(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(a):n.components||a:r(n.components),t.createElement(o.Provider,{value:e},n.children)}}}]);