"use strict";(self.webpackChunkdocsv_2=self.webpackChunkdocsv_2||[]).push([[267],{6723:(n,e,r)=>{r.r(e),r.d(e,{assets:()=>l,contentTitle:()=>c,default:()=>m,frontMatter:()=>o,metadata:()=>h,toc:()=>d});var t=r(5893),a=r(1151),i=r(9286);const s='// WAP to search an element in array\nimport java.util.Scanner;\n\npublic class ArSearch {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int key, n;\n        System.out.println("Enter the number of elements: ");\n        n = sc.nextInt();\n        int ar[] = new int[n];\n        System.out.println("Enter the elements: ");\n        for (int i = 0; i < n; i++)\n            ar[i] = sc.nextInt();\n        System.out.println("Enter the element to be searched: ");\n        key = sc.nextInt();\n        for (int i = 0; i < n; i++) {\n            if (ar[i] == key) {\n                System.out.println("Element found at index " + i);\n                break;\n            }\n            if (i == n - 1)\n                System.out.println("Element not found");\n        }\n    }\n}\n',o={sidebar_position:9,description:"Searching Array in Java"},c="Search in Array",h={id:"java/other/ArSearch",title:"Search in Array",description:"Searching Array in Java",source:"@site/docs/three/java/other/ArSearch.mdx",sourceDirName:"java/other",slug:"/java/other/ArSearch",permalink:"/docs/three/java/other/ArSearch",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:9,frontMatter:{sidebar_position:9,description:"Searching Array in Java"},sidebar:"tutorialSidebar",previous:{title:"Count Digits",permalink:"/docs/three/java/other/Digits"},next:{title:"Sort Array",permalink:"/docs/three/java/other/ArSort"}},l={},d=[{value:"CODE",id:"code",level:2}];function u(n){const e={h1:"h1",h2:"h2",...(0,a.a)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.h1,{id:"search-in-array",children:"Search in Array"}),"\n",(0,t.jsx)(e.h2,{id:"code",children:"CODE"}),"\n",(0,t.jsx)(i.Z,{language:"java",children:s})]})}function m(n={}){const{wrapper:e}={...(0,a.a)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(u,{...n})}):u(n)}}}]);