"use strict";(self.webpackChunkdocsv_2=self.webpackChunkdocsv_2||[]).push([[7066],{9735:(n,t,i)=>{i.r(t),i.d(t,{assets:()=>c,contentTitle:()=>d,default:()=>x,frontMatter:()=>o,metadata:()=>m,toc:()=>l});var r=i(5893),e=i(1151),a=i(9286);const s='import java.util.*;\npublic class Matrix {\n    int m,n;\n    int[][] matrix,transpose;\n    Scanner sc= new Scanner(System.in);\n    void readSize(){\n        System.out.println("Enter M: ");\n        m=sc.nextInt();\n        System.out.println("Enter N: ");\n        n=sc.nextInt();\n       matrix =new int[m][n];\n      transpose =new int[n][m];\n    }\n    void readMatrix(){\n        System.out.println("Enter Matrix: ");\n        for(int i=0;i<m;i++){\n            for(int j=0;j<n;j++){\n                System.out.println("Enter ["+i+"]["+j+"]");\n                matrix[i][j]=sc.nextInt();\n            }\n        }\n    }\n    void displayMatrix(){\n        System.out.println("Array: ");\n        for(int i=0;i<m;i++){\n            for(int j=0;j<n;j++){\n                System.out.print(matrix[i][j]+" ");\n            }\n            System.out.println();\n        }\n    }\n\n    void transposeMatrix(){\n        System.out.println("Transpose: ");\n        for(int i=0;i<n;i++){\n            for(int j=0;j<m;j++){\n                transpose[i][j]=matrix[j][i];\n                System.out.print(transpose[i][j]+" ");\n            }\n            System.out.println();\n        }\n    }\n}\nclass AccessMatrix{\n    public static void main(String[] args) {\n        Matrix m= new Matrix();\n        m.readSize();\n        m.readMatrix();\n        m.displayMatrix();\n        m.transposeMatrix();\n    }\n}\n',o={sidebar_position:6,description:"Matrix"},d="Matrix",m={id:"java/Matrix",title:"Matrix",description:"Matrix",source:"@site/docs/three/java/Matrix.mdx",sourceDirName:"java",slug:"/java/Matrix",permalink:"/docs/three/java/Matrix",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6,description:"Matrix"},sidebar:"tutorialSidebar",previous:{title:"Complex Number Addition",permalink:"/docs/three/java/Complex"},next:{title:"Palindrome",permalink:"/docs/three/java/Palindrome"}},c={},l=[{value:"CODE",id:"code",level:2}];function p(n){const t={h1:"h1",h2:"h2",...(0,e.a)(),...n.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h1,{id:"matrix",children:"Matrix"}),"\n",(0,r.jsx)(t.h2,{id:"code",children:"CODE"}),"\n",(0,r.jsx)(a.Z,{language:"java",children:s})]})}function x(n={}){const{wrapper:t}={...(0,e.a)(),...n.components};return t?(0,r.jsx)(t,{...n,children:(0,r.jsx)(p,{...n})}):p(n)}}}]);