"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3220],{5183:(n,t,i)=>{i.r(t),i.d(t,{assets:()=>u,contentTitle:()=>m,default:()=>d,frontMatter:()=>r,metadata:()=>s,toc:()=>l});var o=i(7462),e=(i(7294),i(3905)),a=i(814);const r={sidebar_position:12,description:"Column Sum Matrix in Java"},m="Column Sum Matrix",s={unversionedId:"java/other/ColSum",id:"java/other/ColSum",title:"Column Sum Matrix",description:"Column Sum Matrix in Java",source:"@site/docs/java/other/ColSum.mdx",sourceDirName:"java/other",slug:"/java/other/ColSum",permalink:"/docs/java/other/ColSum",draft:!1,tags:[],version:"current",sidebarPosition:12,frontMatter:{sidebar_position:12,description:"Column Sum Matrix in Java"},sidebar:"tutorialSidebar",previous:{title:"Transpose Matrix",permalink:"/docs/java/other/Transpose"},next:{title:"Diagonal Sum Matrix",permalink:"/docs/java/other/DiagSum"}},u={},l=[{value:"CODE",id:"code",level:2}],c={toc:l};function d(n){let{components:t,...i}=n;return(0,e.kt)("wrapper",(0,o.Z)({},c,i,{components:t,mdxType:"MDXLayout"}),(0,e.kt)("h1",{id:"column-sum-matrix"},"Column Sum Matrix"),(0,e.kt)("h2",{id:"code"},"CODE"),(0,e.kt)(a.Z,{language:"java",mdxType:"CodeBlock"},'// WAP to perform addition of column elements of a matrix \nimport java.util.Scanner;\n\npublic class ColSum {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int m, n;\n        System.out.println("Enter the number of rows: ");\n        m = sc.nextInt();\n        System.out.println("Enter the number of columns: ");\n        n = sc.nextInt();\n        int mat[][] = new int[m][n];\n        for (int i = 0; i < m; i++) {\n            System.out.println("Enter the elements of row " + (i + 1) + ": ");\n            for (int j = 0; j < n; j++)\n                mat[i][j] = sc.nextInt();\n        }\n        System.out.println("Original matrix: ");\n        for (int i = 0; i < m; i++) {\n            for (int j = 0; j < n; j++)\n                System.out.print(mat[i][j] + " ");\n            System.out.println();\n        }\n        System.out.println("Sum of columns: ");\n\n        // find sum of columns\n        for (int i = 0; i < n; i++) {\n            int sum = 0;\n            for (int j = 0; j < m; j++)\n                sum += mat[j][i];\n            System.out.print(sum + " ");\n        }\n    }\n\n}\n'))}d.isMDXComponent=!0}}]);