"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4484],{4401:(n,i,e)=>{e.r(i),e.d(i,{assets:()=>a,contentTitle:()=>c,default:()=>u,frontMatter:()=>r,metadata:()=>l,toc:()=>m});var t=e(7462),s=(e(7294),e(3905)),o=e(814);const r={sidebar_position:12,description:"Longest Common Subsequence in C"},c="Longest Common Subsequence",l={unversionedId:"algorithms/lcs",id:"algorithms/lcs",title:"Longest Common Subsequence",description:"Longest Common Subsequence in C",source:"@site/docs/algorithms/lcs.mdx",sourceDirName:"algorithms",slug:"/algorithms/lcs",permalink:"/docs/algorithms/lcs",draft:!1,tags:[],version:"current",sidebarPosition:12,frontMatter:{sidebar_position:12,description:"Longest Common Subsequence in C"},sidebar:"tutorialSidebar",previous:{title:"Bellman Ford",permalink:"/docs/algorithms/bellmanFord"},next:{title:"Floyd Warshall Algorithm",permalink:"/docs/algorithms/warshall"}},a={},m=[{value:"CODE",id:"code",level:2}],d={toc:m};function u(n){let{components:i,...e}=n;return(0,s.kt)("wrapper",(0,t.Z)({},d,e,{components:i,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"longest-common-subsequence"},"Longest Common Subsequence"),(0,s.kt)("h2",{id:"code"},"CODE"),(0,s.kt)(o.Z,{language:"c",mdxType:"CodeBlock"},'// WAP to find the longest common subsequence of two strings.\n#include <stdio.h>\n#include <string.h>\n#define MAX 100\nvoid printLCS(char b[MAX][MAX], char X[MAX], int i, int j)\n{\n    if (i == 0 || j == 0)\n        return;\n    if (b[i][j] == \'D\')\n    {\n        printLCS(b, X, i - 1, j - 1);\n        printf("%c", X[i - 1]);\n    }\n    else if (b[i][j] == \'U\')\n        printLCS(b, X, i - 1, j);\n    else\n        printLCS(b, X, i, j - 1);\n}\n\nvoid lcs(char X[MAX], char Y[MAX], int m, int n)\n{\n    int c[MAX][MAX];\n    char b[MAX][MAX];\n\n    for (int i = 0; i <= m; i++)\n        c[i][0] = 0;\n    for (int j = 0; j <= n; j++)\n        c[0][j] = 0;\n\n    for (int i = 1; i <= m; i++)\n        for (int j = 1; j <= n; j++)\n        {\n\n            if (X[i - 1] == Y[j - 1])\n            {\n                c[i][j] = c[i - 1][j - 1] + 1;\n                b[i][j] = \'D\';\n            }\n            else if (c[i - 1][j] >= c[i][j - 1])\n            {\n                c[i][j] = c[i - 1][j];\n                b[i][j] = \'U\';\n            }\n            else\n            {\n                c[i][j] = c[i][j - 1];\n                b[i][j] = \'L\';\n            }\n        }\n\n    printf("The longest common subsequence is: ");\n    printLCS(b, X, m, n);\n    printf("\\n");\n}\n\nint main()\n{\n    char X[MAX], Y[MAX];\n    printf("Enter the first string: ");\n    scanf("%s", X);\n    printf("Enter the second string: ");\n    scanf("%s", Y);\n\n    int m = strlen(X);\n    int n = strlen(Y);\n\n    lcs(X, Y, m, n);\n    return 0;\n}'))}u.isMDXComponent=!0}}]);