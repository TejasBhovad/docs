"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1383],{821:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>o,contentTitle:()=>m,default:()=>N,frontMatter:()=>r,metadata:()=>p,toc:()=>i});var n=a(7462),l=(a(7294),a(3905));const r={},m="SQL Problems",p={unversionedId:"supersecret/00",id:"supersecret/00",title:"SQL Problems",description:"Q1",source:"@site/docs/supersecret/00.md",sourceDirName:"supersecret",slug:"/supersecret/00",permalink:"/docs/supersecret/00",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Graphs Traversal",permalink:"/docs/c/journal/DFS_BFS"}},o={},i=[{value:"Q1",id:"q1",level:2},{value:"Lives",id:"lives",level:4},{value:"Works",id:"works",level:4},{value:"Located_In",id:"located_in",level:4},{value:"Manager",id:"manager",level:4},{value:"Queries",id:"queries",level:3},{value:"Q2",id:"q2",level:2},{value:"Employee",id:"employee",level:4},{value:"Works",id:"works-1",level:4},{value:"Company",id:"company",level:4},{value:"Queries",id:"queries-1",level:3}],k={toc:i};function N(e){let{components:t,...a}=e;return(0,l.kt)("wrapper",(0,n.Z)({},k,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"sql-problems"},"SQL Problems"),(0,l.kt)("h2",{id:"q1"},"Q1"),(0,l.kt)("h4",{id:"lives"},"Lives"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Column Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Data Type"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Name"),(0,l.kt)("td",{parentName:"tr",align:null},"VARCHAR2(255)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Street"),(0,l.kt)("td",{parentName:"tr",align:null},"VARCHAR2(255)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"City"),(0,l.kt)("td",{parentName:"tr",align:null},"VARCHAR2(255)")))),(0,l.kt)("h4",{id:"works"},"Works"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Column Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Data Type"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Name"),(0,l.kt)("td",{parentName:"tr",align:null},"VARCHAR2(255)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Company_Name"),(0,l.kt)("td",{parentName:"tr",align:null},"VARCHAR2(255)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Salary"),(0,l.kt)("td",{parentName:"tr",align:null},"NUMBER")))),(0,l.kt)("h4",{id:"located_in"},"Located_In"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Column Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Data Type"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Company_Name"),(0,l.kt)("td",{parentName:"tr",align:null},"VARCHAR2(255)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"City"),(0,l.kt)("td",{parentName:"tr",align:null},"VARCHAR2(255)")))),(0,l.kt)("h4",{id:"manager"},"Manager"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Column Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Data Type"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Name"),(0,l.kt)("td",{parentName:"tr",align:null},"VARCHAR2(255)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Manager_Name"),(0,l.kt)("td",{parentName:"tr",align:null},"VARCHAR2(255)")))),(0,l.kt)("h3",{id:"queries"},"Queries"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"-- finding employees with salary greater than AVG\nSELECT Name, Salary\nFROM Works\nWHERE Salary > (SELECT AVG(Salary) FROM Works);\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"-- selecting columns from <table>\nSELECT <col_1>, <col_2>\nFROM <table>;\n-- WHERE <col_1> > 2000\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"-- name and city of employess who work for bank of india\nSELECT Lives.Name, Lives.City\nFROM Lives\nJOIN Works ON Lives.Name = Works.Name\nWHERE Works.Company_Name = 'Bank of India';\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"-- selecting employees with manager as 'Alice'\nSELECT Works.Name, Works.Salary, Manager.Manager_Name\nFROM Works\nJOIN Manager ON Works.Name = Manager.Name\nWHERE Manager.Manager_Name = 'Alice';\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"-- selects specific columns from two tables (<table_1> and <table_2>) and combines the results based on a common primary key\nSELECT <table_1>.<col_nam>,<table_2>.<col_nam>\nFROM <table_1>\nJOIN <table_2> ON <table_1>.<prim_id> = <table_2>.<prim_id>\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"-- update table so Agarwal now lives in shastri nagar\nUPDATE Lives\nSET City = 'Shastri Nagar'\nWHERE Name = 'Agarwal';\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"-- selecting employee name and company name\nSELECT Works.Name, Located_in.Company_Name\nFROM Located_in\nJOIN Works ON Located_in.Company_Name = Works.Company_Name;\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"-- no of employees working for each company from same table\nSELECT Company_Name,COUNT(*)\nFROM Works\nGROUP BY Company_Name;\n")),(0,l.kt)("h2",{id:"q2"},"Q2"),(0,l.kt)("h4",{id:"employee"},"Employee"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Column"),(0,l.kt)("th",{parentName:"tr",align:null},"Data Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Eid"),(0,l.kt)("td",{parentName:"tr",align:null},"NUMBER(5)"),(0,l.kt)("td",{parentName:"tr",align:null},"Employee ID (Primary Key)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"empname"),(0,l.kt)("td",{parentName:"tr",align:null},"VARCHAR2(50)"),(0,l.kt)("td",{parentName:"tr",align:null},"Employee Name")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"street"),(0,l.kt)("td",{parentName:"tr",align:null},"VARCHAR2(100)"),(0,l.kt)("td",{parentName:"tr",align:null},"Street Address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"city"),(0,l.kt)("td",{parentName:"tr",align:null},"VARCHAR2(50)"),(0,l.kt)("td",{parentName:"tr",align:null},"City")))),(0,l.kt)("h4",{id:"works-1"},"Works"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Column"),(0,l.kt)("th",{parentName:"tr",align:null},"Data Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Eid"),(0,l.kt)("td",{parentName:"tr",align:null},"NUMBER(5)"),(0,l.kt)("td",{parentName:"tr",align:null},"Employee ID (Foreign Key)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Cid"),(0,l.kt)("td",{parentName:"tr",align:null},"NUMBER(5)"),(0,l.kt)("td",{parentName:"tr",align:null},"Company ID")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Salary"),(0,l.kt)("td",{parentName:"tr",align:null},"NUMBER(10, 2)"),(0,l.kt)("td",{parentName:"tr",align:null},"Salary")))),(0,l.kt)("h4",{id:"company"},"Company"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Column"),(0,l.kt)("th",{parentName:"tr",align:null},"Data Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Cid"),(0,l.kt)("td",{parentName:"tr",align:null},"NUMBER(5)"),(0,l.kt)("td",{parentName:"tr",align:null},"Company ID (Primary Key)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Compname"),(0,l.kt)("td",{parentName:"tr",align:null},"VARCHAR2(50)"),(0,l.kt)("td",{parentName:"tr",align:null},"Company Name")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"city"),(0,l.kt)("td",{parentName:"tr",align:null},"VARCHAR2(50)"),(0,l.kt)("td",{parentName:"tr",align:null},"City")))),(0,l.kt)("h3",{id:"queries-1"},"Queries"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"-- select employees working in TCS making greater than 30000\nSELECT Employee.empname,Employee.street, Employee.city\nFROM Employee\nJOIN Works ON Employee.Eid = Works.Eid\nJOIN Company ON Works.Cid = Company.Cid\nWHERE Company.Compname='TCS' AND Works.Salary> 30000;\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"-- all employees with name starting with S\nSELECT empname\nFROM Employee\nWHERE empname LIKE 'S%';\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"-- count of all records in Employee table\nSELECT COUNT(*) from Employee;\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"-- finding annual salary of Employees\nSELECT Employee.empname, Works.Salary*12\nFROM Employee\nJOIN Works ON Employee.Eid = Works.Eid;\n")))}N.isMDXComponent=!0}}]);