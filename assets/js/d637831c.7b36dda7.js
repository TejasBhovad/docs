"use strict";(self.webpackChunkdocsv_2=self.webpackChunkdocsv_2||[]).push([[7666],{3450:(n,r,e)=>{e.r(r),e.d(r,{assets:()=>d,contentTitle:()=>s,default:()=>f,frontMatter:()=>t,metadata:()=>o,toc:()=>l});var a=e(5893),i=e(1151);const t={},s="Array Programs",o={id:"c/arrays/programs",title:"Array Programs",description:"1. #### WAP to find sum and average of n numbers using arrays",source:"@site/docs/one/c/arrays/programs.md",sourceDirName:"c/arrays",slug:"/c/arrays/programs",permalink:"/docs/one/c/arrays/programs",draft:!1,unlisted:!1,editUrl:"https://github.com/TejasBhovad/docs/docs/one/c/arrays/programs.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Introduction",permalink:"/docs/one/c/"},next:{title:"Patterns in C",permalink:"/docs/one/c/patterns/programs"}},d={},l=[{value:"WAP to find sum and average of n numbers using arrays",id:"wap-to-find-sum-and-average-of-n-numbers-using-arrays",level:4},{value:"WAP to find largest element in an array",id:"wap-to-find-largest-element-in-an-array",level:4},{value:"WAP to reverse an array",id:"wap-to-reverse-an-array",level:4},{value:"WAP to search an element in an array",id:"wap-to-search-an-element-in-an-array",level:4},{value:"WAP to sort an array in descending",id:"wap-to-sort-an-array-in-descending",level:4},{value:"WAP to sort an array in ascending",id:"wap-to-sort-an-array-in-ascending",level:4}];function c(n){const r={code:"code",h1:"h1",h4:"h4",li:"li",ol:"ol",pre:"pre",...(0,i.a)(),...n.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(r.h1,{id:"array-programs",children:"Array Programs"}),"\n",(0,a.jsxs)(r.ol,{children:["\n",(0,a.jsxs)(r.li,{children:["\n",(0,a.jsx)(r.h4,{id:"wap-to-find-sum-and-average-of-n-numbers-using-arrays",children:"WAP to find sum and average of n numbers using arrays"}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-c",children:'#include <stdio.h>\nint main()\n{\n    int n, sum = 0, avg;\n    printf("Enter no of elements: ");\n    scanf("%d", &n);\n    int ar[n];\n    printf("\\nEnter Elements of Array: \\n");\n    for (int i = 0; i < n; i++)\n    {\n        scanf("%d", &ar[i]);\n        sum = sum + ar[i];\n    }\n    avg = sum / n;\n    printf("\\nSum: %d", sum);\n    printf("\\nAverage: %d\\n", avg);\n    return 0;\n}\n'})}),"\n",(0,a.jsxs)(r.ol,{children:["\n",(0,a.jsxs)(r.li,{children:["\n",(0,a.jsx)(r.h4,{id:"wap-to-find-largest-element-in-an-array",children:"WAP to find largest element in an array"}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-c",children:'#include <stdio.h>\nint main()\n{\n    int n, largest;\n    printf("Enter no of elements: ");\n    scanf("%d", &n);\n    int ar[n];\n    printf("\\nEnter Elements of Array: \\n");\n    for (int i = 0; i < n; i++)\n    {\n        scanf("%d", &ar[i]);\n    }\n    largest = ar[0];\n    for (int i = 1; i < n; i++)\n    {\n        if (ar[i] > largest)\n        {\n            largest = ar[i];\n        }\n    }\n    printf("\\nLargest Array: %d\\n", largest);\n    return 0;\n}\n'})}),"\n",(0,a.jsxs)(r.ol,{children:["\n",(0,a.jsxs)(r.li,{children:["\n",(0,a.jsx)(r.h4,{id:"wap-to-reverse-an-array",children:"WAP to reverse an array"}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-c",children:'#include <stdio.h>\nint main()\n{\n    int n, count = 0;\n    printf("Enter no of elements: ");\n    scanf("%d", &n);\n    int ar[n], rev[n];\n    printf("\\nEnter Elements of Array: \\n");\n    for (int i = 0; i < n; i++)\n    {\n        scanf("%d", &ar[i]);\n    }\n    for (int i = n - 1; i >= 0; i--)\n    {\n        rev[count] = ar[i];\n        count++;\n    }\n    printf("\\nOriginal Array: ");\n    for (int i = 0; i < n; i++)\n    {\n        printf("%d", ar[i]);\n    }\n    printf("\\nReversed Array: ");\n    for (int i = 0; i < n; i++)\n    {\n        printf("%d", rev[i]);\n    }\n    printf("\\n");\n    return 0;\n}\n'})}),"\n",(0,a.jsxs)(r.ol,{children:["\n",(0,a.jsxs)(r.li,{children:["\n",(0,a.jsx)(r.h4,{id:"wap-to-search-an-element-in-an-array",children:"WAP to search an element in an array"}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-c",children:'#include <stdio.h>\nint main()\n{\n    int n, target, flag = 0;\n    printf("Enter no of elements: ");\n    scanf("%d", &n);\n    int ar[n];\n    printf("\\nEnter Elements of Array: \\n");\n    for (int i = 0; i < n; i++)\n    {\n        scanf("%d", &ar[i]);\n    }\n    printf("Enter element to be searched: ");\n    scanf("%d", &target);\n    for (int i = 0; i < n; i++)\n    {\n        if (ar[i] == target)\n        {\n            printf("%d found at index %d\\n", target, i);\n            flag++;\n        }\n    }\n    if (flag == 0)\n    {\n        printf("Element not found");\n    }\n    printf("\\n");\n    return 0;\n}\n'})}),"\n",(0,a.jsxs)(r.ol,{children:["\n",(0,a.jsxs)(r.li,{children:["\n",(0,a.jsx)(r.h4,{id:"wap-to-sort-an-array-in-descending",children:"WAP to sort an array in descending"}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-c",children:'#include <stdio.h>\nint main()\n{\n    int n, tmp;\n    printf("Enter no of elements: ");\n    scanf("%d", &n);\n    int ar[n];\n    printf("\\nEnter Elements of Array: \\n");\n    for (int i = 0; i < n; i++)\n    {\n        scanf("%d", &ar[i]);\n    }\n    for (int i = 0; i < n; i++)\n    {\n        for (int j = 0; j < n; j++)\n        {\n            if (ar[i] > ar[j])\n            {\n                tmp = ar[j];\n                ar[j] = ar[i];\n                ar[i] = tmp;\n            }\n        }\n    }\n    printf("\\nSorted Array: \\n");\n    for (int i = 0; i < n; i++)\n    {\n        printf("%d ", ar[i]);\n    }\n    printf("\\n");\n    return 0;\n}\n'})}),"\n",(0,a.jsxs)(r.ol,{children:["\n",(0,a.jsxs)(r.li,{children:["\n",(0,a.jsx)(r.h4,{id:"wap-to-sort-an-array-in-ascending",children:"WAP to sort an array in ascending"}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-c",children:'#include <stdio.h>\nint main()\n{\n    int n, tmp;\n    printf("Enter no of elements: ");\n    scanf("%d", &n);\n    int ar[n];\n    printf("\\nEnter Elements of Array: \\n");\n    for (int i = 0; i < n; i++)\n    {\n        scanf("%d", &ar[i]);\n    }\n    for (int i = 0; i < n; i++)\n    {\n        for (int j = 0; j < n; j++)\n        {\n            if (ar[i] < ar[j])\n            {\n                tmp = ar[j];\n                ar[j] = ar[i];\n                ar[i] = tmp;\n            }\n        }\n    }\n    printf("\\nSorted Array: \\n");\n    for (int i = 0; i < n; i++)\n    {\n        printf("%d ", ar[i]);\n    }\n    printf("\\n");\n    return 0;\n}\n'})})]})}function f(n={}){const{wrapper:r}={...(0,i.a)(),...n.components};return r?(0,a.jsx)(r,{...n,children:(0,a.jsx)(c,{...n})}):c(n)}},1151:(n,r,e)=>{e.d(r,{Z:()=>o,a:()=>s});var a=e(7294);const i={},t=a.createContext(i);function s(n){const r=a.useContext(t);return a.useMemo((function(){return"function"==typeof n?n(r):{...r,...n}}),[r,n])}function o(n){let r;return r=n.disableParentContext?"function"==typeof n.components?n.components(i):n.components||i:s(n.components),a.createElement(t.Provider,{value:r},n.children)}}}]);