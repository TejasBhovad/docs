"use strict";(self.webpackChunkdocsv_2=self.webpackChunkdocsv_2||[]).push([[7914],{5944:(n,i,r)=>{r.r(i),r.d(i,{assets:()=>a,contentTitle:()=>c,default:()=>f,frontMatter:()=>t,metadata:()=>o,toc:()=>u});var e=r(5893),s=r(1151);const t={},c="Recursion in C",o={id:"c/recursion/recursion",title:"Recursion in C",description:"1. #### WAP to find factorial of number using recursion",source:"@site/docs/one/c/recursion/recursion.md",sourceDirName:"c/recursion",slug:"/c/recursion/",permalink:"/docs/one/c/recursion/",draft:!1,unlisted:!1,editUrl:"https://github.com/TejasBhovad/docs/docs/one/c/recursion/recursion.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Pointers in C",permalink:"/docs/one/c/pointers/"},next:{title:"Strings in C",permalink:"/docs/one/c/string/"}},a={},u=[{value:"WAP to find factorial of number using recursion",id:"wap-to-find-factorial-of-number-using-recursion",level:4},{value:"WAP to find gcd of two numbers using recursion",id:"wap-to-find-gcd-of-two-numbers-using-recursion",level:4},{value:"WAP to find N terms of Fibonacci series using recursion",id:"wap-to-find-n-terms-of-fibonacci-series-using-recursion",level:4}];function d(n){const i={code:"code",h1:"h1",h4:"h4",li:"li",ol:"ol",pre:"pre",...(0,s.a)(),...n.components};return(0,e.jsxs)(e.Fragment,{children:[(0,e.jsx)(i.h1,{id:"recursion-in-c",children:"Recursion in C"}),"\n",(0,e.jsxs)(i.ol,{children:["\n",(0,e.jsxs)(i.li,{children:["\n",(0,e.jsx)(i.h4,{id:"wap-to-find-factorial-of-number-using-recursion",children:"WAP to find factorial of number using recursion"}),"\n"]}),"\n"]}),"\n",(0,e.jsx)(i.pre,{children:(0,e.jsx)(i.code,{className:"language-c",children:'#include <stdio.h>\n\n// Recursive function to find the factorial of a number\nint factorial(int n)\n{\n    if (n == 0)\n    {\n        return 1;\n    }\n    else\n    {\n        return n * factorial(n - 1);\n    }\n}\n\nint main()\n{\n    int n;\n    printf("Enter a number: ");\n    scanf("%d", &n);\n\n    int result = factorial(n);\n    printf("The factorial of %d is %d\\n", n, result);\n\n    return 0;\n}\n\n'})}),"\n",(0,e.jsxs)(i.ol,{start:"2",children:["\n",(0,e.jsxs)(i.li,{children:["\n",(0,e.jsx)(i.h4,{id:"wap-to-find-gcd-of-two-numbers-using-recursion",children:"WAP to find gcd of two numbers using recursion"}),"\n"]}),"\n"]}),"\n",(0,e.jsx)(i.pre,{children:(0,e.jsx)(i.code,{className:"language-c",children:'#include <stdio.h>\nint gcd(int a, int b)\n{\n    if (a == 0)\n        return b;\n    return gcd(b % a, a);\n}\nint main()\n{\n    int a, b, GCD;\n    printf("Enter First Number: ");\n    scanf("%d", &a);\n    printf("Enter Second Number: ");\n    scanf("%d", &b);\n    printf("\\n");\n    GCD = gcd(a, b);\n    printf("GCD: %d \\n", GCD);\n    // TO FIND LCM:\n    // int LCM = (a * b) / GCD;\n    // printf("LCM: %d \\n", LCM);\n    printf("\\n");\n    return 0;\n}\n'})}),"\n",(0,e.jsxs)(i.ol,{start:"3",children:["\n",(0,e.jsxs)(i.li,{children:["\n",(0,e.jsx)(i.h4,{id:"wap-to-find-n-terms-of-fibonacci-series-using-recursion",children:"WAP to find N terms of Fibonacci series using recursion"}),"\n"]}),"\n"]}),"\n",(0,e.jsx)(i.pre,{children:(0,e.jsx)(i.code,{className:"language-c",children:'#include <stdio.h>\nint fibonacci(int n)\n{\n    if (n <= 1)\n        return n;\n    return fibonacci(n - 1) + fibonacci(n - 2);\n}\nint main()\n{\n    int n, a = 0, b = 1, tmp;\n    printf("Enter N: ");\n    scanf("%d", &n);\n    for (int i = 0; i < n; i++)\n    {\n        printf("%d ", fibonacci(i));\n    }\n    printf("\\n");\n    return 0;\n}\n'})})]})}function f(n={}){const{wrapper:i}={...(0,s.a)(),...n.components};return i?(0,e.jsx)(i,{...n,children:(0,e.jsx)(d,{...n})}):d(n)}}}]);