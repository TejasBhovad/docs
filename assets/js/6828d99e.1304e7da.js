"use strict";(self.webpackChunkdocsv_2=self.webpackChunkdocsv_2||[]).push([[6788],{5792:(n,i,t)=>{t.r(i),t.d(i,{assets:()=>h,contentTitle:()=>o,default:()=>g,frontMatter:()=>l,metadata:()=>d,toc:()=>c});var r=t(5893),s=t(1151),e=t(9286);const a='#include <stdio.h>\n#define INF 99999\n#define V 4\n\nvoid path(int graph[V][V])\n{\n    int dist[V][V];\n\n    for (int i = 0; i < V; i++)\n    {\n        for (int j = 0; j < V; j++)\n        {\n            dist[i][j] = graph[i][j];\n        }\n    }\n\n    for (int k = 0; k < V; k++)\n    {\n        for (int i = 0; i < V; i++)\n        {\n            for (int j = 0; j < V; j++)\n            {\n                if (dist[i][k] != INF && dist[k][j] != INF &&\n                    dist[i][j] > dist[i][k] + dist[k][j])\n                {\n                    dist[i][j] = dist[i][k] + dist[k][j];\n                }\n            }\n        }\n    }\n\n    for (int i = 0; i < V; i++)\n    {\n        for (int j = 0; j < V; j++)\n        {\n            if (dist[i][j] == INF)\n            {\n                printf("INF ");\n            }\n            else\n            {\n                printf("%d ", dist[i][j]);\n            }\n        }\n        printf("\\n");\n    }\n}\n\nint main()\n{\n    int graph[V][V] = {\n        {0, 3, INF, 5},\n        {2, 0, INF, 4},\n        {INF, 1, 0, INF},\n        {INF, INF, 2, 0}};\n\n    path(graph);\n\n    return 0;\n}',l={sidebar_position:13,description:"Warshall Algo in C"},o="Floyd Warshall Algorithm",d={id:"algorithms/warshall",title:"Floyd Warshall Algorithm",description:"Warshall Algo in C",source:"@site/docs/three/algorithms/warshall.mdx",sourceDirName:"algorithms",slug:"/algorithms/warshall",permalink:"/docs/three/algorithms/warshall",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:13,frontMatter:{sidebar_position:13,description:"Warshall Algo in C"},sidebar:"tutorialSidebar",previous:{title:"Longest Common Subsequence",permalink:"/docs/three/algorithms/lcs"},next:{title:"8 Queens in C",permalink:"/docs/three/algorithms/8queens"}},h={},c=[{value:"CODE",id:"code",level:2}];function p(n){const i={h1:"h1",h2:"h2",...(0,s.a)(),...n.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(i.h1,{id:"floyd-warshall-algorithm",children:"Floyd Warshall Algorithm"}),"\n",(0,r.jsx)(i.h2,{id:"code",children:"CODE"}),"\n",(0,r.jsx)(e.Z,{language:"c",children:a})]})}function g(n={}){const{wrapper:i}={...(0,s.a)(),...n.components};return i?(0,r.jsx)(i,{...n,children:(0,r.jsx)(p,{...n})}):p(n)}}}]);