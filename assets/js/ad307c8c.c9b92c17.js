"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2963],{9676:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>m,frontMatter:()=>i,metadata:()=>d,toc:()=>c});var t=a(7462),s=(a(7294),a(3905)),o=a(814);const i={sidebar_position:4,description:"Nested queries in SQL"},r="Nested queries",d={unversionedId:"sql/nested",id:"sql/nested",title:"Nested queries",description:"Nested queries in SQL",source:"@site/docs/sql/nested.mdx",sourceDirName:"sql",slug:"/sql/nested",permalink:"/docs/sql/nested",draft:!1,tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4,description:"Nested queries in SQL"},sidebar:"tutorialSidebar",previous:{title:"Queries",permalink:"/docs/sql/queries"},next:{title:"Joins",permalink:"/docs/sql/joins"}},l={},c=[{value:"Code",id:"code",level:3}],u={toc:c};function m(e){let{components:n,...a}=e;return(0,s.kt)("wrapper",(0,t.Z)({},u,a,{components:n,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"nested-queries"},"Nested queries"),(0,s.kt)("admonition",{type:"note"},(0,s.kt)("p",{parentName:"admonition"},"If you get ORA-00955: name is already used by an existing object error, you can use the following command to delete the table."),(0,s.kt)("pre",{parentName:"admonition"},(0,s.kt)("code",{parentName:"pre",className:"language-sql"},"DROP TABLE table_name;\n"))),(0,s.kt)("h3",{id:"code"},"Code"),(0,s.kt)(o.Z,{language:"sql",mdxType:"CodeBlock"},"DROP TABLE tejas_bank;\nDROP TABLE tejas_loan;\n-- creating a table\nCREATE TABLE tejas_bank(\n    cust_id number(5), \n    name varchar(30), \n    balance number(10)\n    );\nCREATE TABLE tejas_loan(\n    cust_id number(5), \n    name varchar(30),\n    loan number(8)\n    );\nDESC tejas_bank;\nDESC tejas_loan;\nINSERT INTO tejas_bank VALUES(1,'Vjay',4000);\nINSERT INTO tejas_bank VALUES(2,'Vjay',1000);\nINSERT INTO tejas_loan VALUES(2,'Vjay',5000);\nINSERT INTO tejas_loan VALUES(3,'Riyal',100);\n-- all customers having record in tejas_loan and in tejas_bank\nSELECT DISTINCT name,cust_id FROM tejas_loan\n    WHERE name IN(SELECT name FROM tejas_bank);\n-- all customers having record in tejas_loan and not in tejas_bank\nSELECT DISTINCT name,cust_id FROM tejas_loan\n    WHERE name NOT IN(SELECT name FROM tejas_bank);"))}m.isMDXComponent=!0}}]);