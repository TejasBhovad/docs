"use strict";(self.webpackChunkdocsv_2=self.webpackChunkdocsv_2||[]).push([[9006],{3370:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>t,contentTitle:()=>i,default:()=>o,frontMatter:()=>d,metadata:()=>a,toc:()=>c});var r=s(5893),l=s(1151);const d={},i="SQL Problems",a={id:"supersecret/00",title:"SQL Problems",description:"Q1",source:"@site/docs/three/supersecret/00.md",sourceDirName:"supersecret",slug:"/supersecret/00",permalink:"/docs/three/supersecret/00",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Views",permalink:"/docs/three/sql/views"},next:{title:"Practicals Reference",permalink:"/docs/three/supersecret/01"}},t={},c=[{value:"Q1",id:"q1",level:2},{value:"Lives",id:"lives",level:4},{value:"Works",id:"works",level:4},{value:"Located_In",id:"located_in",level:4},{value:"Manager",id:"manager",level:4},{value:"Queries",id:"queries",level:3},{value:"Q2",id:"q2",level:2},{value:"Employee",id:"employee",level:4},{value:"Works",id:"works-1",level:4},{value:"Company",id:"company",level:4},{value:"Queries",id:"queries-1",level:3}];function h(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,l.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"sql-problems",children:"SQL Problems"}),"\n",(0,r.jsx)(n.h2,{id:"q1",children:"Q1"}),"\n",(0,r.jsx)(n.h4,{id:"lives",children:"Lives"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Column Name"}),(0,r.jsx)(n.th,{children:"Data Type"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Name"}),(0,r.jsx)(n.td,{children:"VARCHAR2(255)"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Street"}),(0,r.jsx)(n.td,{children:"VARCHAR2(255)"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"City"}),(0,r.jsx)(n.td,{children:"VARCHAR2(255)"})]})]})]}),"\n",(0,r.jsx)(n.h4,{id:"works",children:"Works"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Column Name"}),(0,r.jsx)(n.th,{children:"Data Type"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Name"}),(0,r.jsx)(n.td,{children:"VARCHAR2(255)"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Company_Name"}),(0,r.jsx)(n.td,{children:"VARCHAR2(255)"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Salary"}),(0,r.jsx)(n.td,{children:"NUMBER"})]})]})]}),"\n",(0,r.jsx)(n.h4,{id:"located_in",children:"Located_In"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Column Name"}),(0,r.jsx)(n.th,{children:"Data Type"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Company_Name"}),(0,r.jsx)(n.td,{children:"VARCHAR2(255)"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"City"}),(0,r.jsx)(n.td,{children:"VARCHAR2(255)"})]})]})]}),"\n",(0,r.jsx)(n.h4,{id:"manager",children:"Manager"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Column Name"}),(0,r.jsx)(n.th,{children:"Data Type"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Name"}),(0,r.jsx)(n.td,{children:"VARCHAR2(255)"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Manager_Name"}),(0,r.jsx)(n.td,{children:"VARCHAR2(255)"})]})]})]}),"\n",(0,r.jsx)(n.h3,{id:"queries",children:"Queries"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"-- finding employees with salary greater than AVG\nSELECT Name, Salary\nFROM Works\nWHERE Salary > (SELECT AVG(Salary) FROM Works);\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"-- selecting columns from <table>\nSELECT <col_1>, <col_2>\nFROM <table>;\n-- WHERE <col_1> > 2000\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"-- name and city of employess who work for bank of india\nSELECT Lives.Name, Lives.City\nFROM Lives\nJOIN Works ON Lives.Name = Works.Name\nWHERE Works.Company_Name = 'Bank of India';\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"-- selecting employees with manager as 'Alice'\nSELECT Works.Name, Works.Salary, Manager.Manager_Name\nFROM Works\nJOIN Manager ON Works.Name = Manager.Name\nWHERE Manager.Manager_Name = 'Alice';\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"-- selects specific columns from two tables (<table_1> and <table_2>) and combines the results based on a common primary key\nSELECT <table_1>.<col_nam>,<table_2>.<col_nam>\nFROM <table_1>\nJOIN <table_2> ON <table_1>.<prim_id> = <table_2>.<prim_id>\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"-- update table so Agarwal now lives in shastri nagar\nUPDATE Lives\nSET City = 'Shastri Nagar'\nWHERE Name = 'Agarwal';\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"-- selecting employee name and company name\nSELECT Works.Name, Located_in.Company_Name\nFROM Located_in\nJOIN Works ON Located_in.Company_Name = Works.Company_Name;\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"-- no of employees working for each company from same table\nSELECT Company_Name,COUNT(*)\nFROM Works\nGROUP BY Company_Name;\n"})}),"\n",(0,r.jsx)(n.h2,{id:"q2",children:"Q2"}),"\n",(0,r.jsx)(n.h4,{id:"employee",children:"Employee"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Column"}),(0,r.jsx)(n.th,{children:"Data Type"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Eid"}),(0,r.jsx)(n.td,{children:"NUMBER(5)"}),(0,r.jsx)(n.td,{children:"Employee ID (Primary Key)"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"empname"}),(0,r.jsx)(n.td,{children:"VARCHAR2(50)"}),(0,r.jsx)(n.td,{children:"Employee Name"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"street"}),(0,r.jsx)(n.td,{children:"VARCHAR2(100)"}),(0,r.jsx)(n.td,{children:"Street Address"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"city"}),(0,r.jsx)(n.td,{children:"VARCHAR2(50)"}),(0,r.jsx)(n.td,{children:"City"})]})]})]}),"\n",(0,r.jsx)(n.h4,{id:"works-1",children:"Works"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Column"}),(0,r.jsx)(n.th,{children:"Data Type"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Eid"}),(0,r.jsx)(n.td,{children:"NUMBER(5)"}),(0,r.jsx)(n.td,{children:"Employee ID (Foreign Key)"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Cid"}),(0,r.jsx)(n.td,{children:"NUMBER(5)"}),(0,r.jsx)(n.td,{children:"Company ID"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Salary"}),(0,r.jsx)(n.td,{children:"NUMBER(10, 2)"}),(0,r.jsx)(n.td,{children:"Salary"})]})]})]}),"\n",(0,r.jsx)(n.h4,{id:"company",children:"Company"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Column"}),(0,r.jsx)(n.th,{children:"Data Type"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Cid"}),(0,r.jsx)(n.td,{children:"NUMBER(5)"}),(0,r.jsx)(n.td,{children:"Company ID (Primary Key)"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Compname"}),(0,r.jsx)(n.td,{children:"VARCHAR2(50)"}),(0,r.jsx)(n.td,{children:"Company Name"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"city"}),(0,r.jsx)(n.td,{children:"VARCHAR2(50)"}),(0,r.jsx)(n.td,{children:"City"})]})]})]}),"\n",(0,r.jsx)(n.h3,{id:"queries-1",children:"Queries"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"-- select employees working in TCS making greater than 30000\nSELECT Employee.empname,Employee.street, Employee.city\nFROM Employee\nJOIN Works ON Employee.Eid = Works.Eid\nJOIN Company ON Works.Cid = Company.Cid\nWHERE Company.Compname='TCS' AND Works.Salary> 30000;\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"-- all employees with name starting with S\nSELECT empname\nFROM Employee\nWHERE empname LIKE 'S%';\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"-- count of all records in Employee table\nSELECT COUNT(*) from Employee;\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"-- finding annual salary of Employees\nSELECT Employee.empname, Works.Salary*12\nFROM Employee\nJOIN Works ON Employee.Eid = Works.Eid;\n"})})]})}function o(e={}){const{wrapper:n}={...(0,l.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}}}]);