"use strict";(self.webpackChunkdocsv_2=self.webpackChunkdocsv_2||[]).push([[9088],{5570:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>c,contentTitle:()=>l,default:()=>v,frontMatter:()=>s,metadata:()=>r,toc:()=>u});const r=JSON.parse('{"id":"java/Overload","title":"Overloading Area Method","description":"Method Overloading in Java","source":"@site/docs/three/java/Overload.mdx","sourceDirName":"java","slug":"/java/Overload","permalink":"/docs/three/java/Overload","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4,"description":"Method Overloading in Java"},"sidebar":"tutorialSidebar","previous":{"title":"Rectangle Square Area","permalink":"/docs/three/java/Rectangle"},"next":{"title":"Complex Number Addition","permalink":"/docs/three/java/Complex"}}');var t=n(4848),i=n(8453),o=n(1432);const d='public class Area {\n    public static void main(String[] args) {\n        GetArea g=new GetArea();\n        System.out.println("Circle:"+g.area(12.0));\n        System.out.println("Triangle:"+g.area(12.0,2.0));\n        System.out.println("Square:"+g.area(5));\n        System.out.println("Rectangle:"+g.area(12,5));\n\n    }\n\n}\nclass GetArea{\n    double area(double r){\n        return 3.14*r*r;\n    }\n    double area(double base,double height){\n        return 0.5*base*height;\n    }\n    int area(int len,int wid){\n        return len*wid;\n    }\n    int area(int  a){\n        return a*a;\n    }\n\n}',s={sidebar_position:4,description:"Method Overloading in Java"},l="Overloading Area Method",c={},u=[{value:"CODE",id:"code",level:2}];function h(e){const a={h1:"h1",h2:"h2",header:"header",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(a.header,{children:(0,t.jsx)(a.h1,{id:"overloading-area-method",children:"Overloading Area Method"})}),"\n",(0,t.jsx)(a.h2,{id:"code",children:"CODE"}),"\n",(0,t.jsx)(o.A,{language:"java",children:d})]})}function v(e={}){const{wrapper:a}={...(0,i.R)(),...e.components};return a?(0,t.jsx)(a,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}}}]);