"use strict";(self.webpackChunkdocsv_2=self.webpackChunkdocsv_2||[]).push([[2465],{2168:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>c,contentTitle:()=>s,default:()=>h,frontMatter:()=>d,metadata:()=>l,toc:()=>u});var r=n(5893),t=n(1151),i=n(9286);const o='public class Area {\n    public static void main(String[] args) {\n        GetArea g=new GetArea();\n        System.out.println("Circle:"+g.area(12.0));\n        System.out.println("Triangle:"+g.area(12.0,2.0));\n        System.out.println("Square:"+g.area(5));\n        System.out.println("Rectangle:"+g.area(12,5));\n\n    }\n\n}\nclass GetArea{\n    double area(double r){\n        return 3.14*r*r;\n    }\n    double area(double base,double height){\n        return 0.5*base*height;\n    }\n    int area(int len,int wid){\n        return len*wid;\n    }\n    int area(int  a){\n        return a*a;\n    }\n\n}',d={sidebar_position:4,description:"Method Overloading in Java"},s="Overloading Area Method",l={id:"java/Overload",title:"Overloading Area Method",description:"Method Overloading in Java",source:"@site/docs/three/java/Overload.mdx",sourceDirName:"java",slug:"/java/Overload",permalink:"/docs/three/java/Overload",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4,description:"Method Overloading in Java"},sidebar:"tutorialSidebar",previous:{title:"Rectangle Square Area",permalink:"/docs/three/java/Rectangle"},next:{title:"Complex Number Addition",permalink:"/docs/three/java/Complex"}},c={},u=[{value:"CODE",id:"code",level:2}];function v(e){const a={h1:"h1",h2:"h2",...(0,t.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(a.h1,{id:"overloading-area-method",children:"Overloading Area Method"}),"\n",(0,r.jsx)(a.h2,{id:"code",children:"CODE"}),"\n",(0,r.jsx)(i.Z,{language:"java",children:o})]})}function h(e={}){const{wrapper:a}={...(0,t.a)(),...e.components};return a?(0,r.jsx)(a,{...e,children:(0,r.jsx)(v,{...e})}):v(e)}}}]);