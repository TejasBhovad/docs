"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[7592],{3268:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>v,frontMatter:()=>r,metadata:()=>c,toc:()=>d});var i=a(7462),t=(a(7294),a(3905)),s=a(814);const r={sidebar_position:8,description:"Multilevel Inheritance in Java"},o="Inheritance",c={unversionedId:"java/Inheritance",id:"java/Inheritance",title:"Inheritance",description:"Multilevel Inheritance in Java",source:"@site/docs/java/Inheritance.mdx",sourceDirName:"java",slug:"/java/Inheritance",permalink:"/docs/java/Inheritance",draft:!1,tags:[],version:"current",sidebarPosition:8,frontMatter:{sidebar_position:8,description:"Multilevel Inheritance in Java"},sidebar:"tutorialSidebar",previous:{title:"Palindrome",permalink:"/docs/java/Palindrome"},next:{title:"Interfaces",permalink:"/docs/java/Interface"}},l={},d=[{value:"CODE",id:"code",level:2}],u={toc:d};function v(e){let{components:n,...a}=e;return(0,t.kt)("wrapper",(0,i.Z)({},u,a,{components:n,mdxType:"MDXLayout"}),(0,t.kt)("h1",{id:"inheritance"},"Inheritance"),(0,t.kt)("h2",{id:"code"},"CODE"),(0,t.kt)(s.Z,{language:"java",mdxType:"CodeBlock"},'// WAP to show multilevel inheritance\n\npublic class Inheritance {\n    public static void main(String args[]) {\n        C c = new C();\n        c.getRadius(5);\n        c.calcVolume();\n        c.displayVolume();\n    }\n}\n\nclass A {\n    int radius;\n    double volume;\n}\n\nclass B extends A {\n    void getRadius(int r) {\n        radius = r;\n    }\n}\n\nclass C extends B {\n\n    void calcVolume() {\n        volume = 4 / 3 * 3.14 * radius * radius * radius;\n    }\n\n    void displayVolume() {\n        System.out.println("Volume of sphere is " + volume);\n    }\n\n}\n'))}v.isMDXComponent=!0}}]);