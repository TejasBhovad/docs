"use strict";(self.webpackChunkdocsv_2=self.webpackChunkdocsv_2||[]).push([[8879],{794:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>c,contentTitle:()=>u,default:()=>p,frontMatter:()=>l,metadata:()=>t,toc:()=>o});const t=JSON.parse('{"id":"java/Multithread","title":"Multi Threading","description":"Multiple threads in Java","source":"@site/docs/three/java/Multithread.mdx","sourceDirName":"java","slug":"/java/Multithread","permalink":"/docs/three/java/Multithread","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":11,"frontMatter":{"sidebar_position":11,"description":"Multiple threads in Java"},"sidebar":"tutorialSidebar","previous":{"title":"Exceptions","permalink":"/docs/three/java/Exception"},"next":{"title":"Calculator","permalink":"/docs/three/java/Calculator"}}');var r=a(4848),i=a(8453),s=a(1432);const d='import java.util.*;\n\npublic class Multithread {\n    public static void main(String[] args) {\n        Reader r = new Reader();\n        Thread readerThread = new Thread(r);\n        readerThread.start();\n    }\n}\n\nclass Reader implements Runnable {\n    public void run() {\n        Scanner sc = new Scanner(System.in);\n        System.out.println("Enter a number: ");\n        int n = sc.nextInt();\n        Thread Square = new Thread(new Square(n));\n        Square.start();\n    }\n}\n\nclass Square implements Runnable {\n    int x;\n\n    Square(int n) {\n        x = n;\n    }\n\n    public void run() {\n        int sqr = x * x;\n        System.out.println("Square: " + sqr);\n    }\n}\n',l={sidebar_position:11,description:"Multiple threads in Java"},u="Multi Threading",c={},o=[{value:"CODE",id:"code",level:2}];function h(e){const n={h1:"h1",h2:"h2",header:"header",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"multi-threading",children:"Multi Threading"})}),"\n",(0,r.jsx)(n.h2,{id:"code",children:"CODE"}),"\n",(0,r.jsx)(s.A,{language:"java",children:d})]})}function p(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}}}]);