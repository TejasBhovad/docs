"use strict";(self.webpackChunkdocsv_2=self.webpackChunkdocsv_2||[]).push([[7849],{2296:(n,t,i)=>{i.r(t),i.d(t,{assets:()=>l,contentTitle:()=>m,default:()=>p,frontMatter:()=>s,metadata:()=>u,toc:()=>c});var e=i(5893),r=i(1151),o=i(9286);const a='// WAP to perform addition of column elements of a matrix \nimport java.util.Scanner;\n\npublic class ColSum {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int m, n;\n        System.out.println("Enter the number of rows: ");\n        m = sc.nextInt();\n        System.out.println("Enter the number of columns: ");\n        n = sc.nextInt();\n        int mat[][] = new int[m][n];\n        for (int i = 0; i < m; i++) {\n            System.out.println("Enter the elements of row " + (i + 1) + ": ");\n            for (int j = 0; j < n; j++)\n                mat[i][j] = sc.nextInt();\n        }\n        System.out.println("Original matrix: ");\n        for (int i = 0; i < m; i++) {\n            for (int j = 0; j < n; j++)\n                System.out.print(mat[i][j] + " ");\n            System.out.println();\n        }\n        System.out.println("Sum of columns: ");\n\n        // find sum of columns\n        for (int i = 0; i < n; i++) {\n            int sum = 0;\n            for (int j = 0; j < m; j++)\n                sum += mat[j][i];\n            System.out.print(sum + " ");\n        }\n    }\n\n}\n',s={sidebar_position:12,description:"Column Sum Matrix in Java"},m="Column Sum Matrix",u={id:"java/other/ColSum",title:"Column Sum Matrix",description:"Column Sum Matrix in Java",source:"@site/docs/three/java/other/ColSum.mdx",sourceDirName:"java/other",slug:"/java/other/ColSum",permalink:"/docs/three/java/other/ColSum",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:12,frontMatter:{sidebar_position:12,description:"Column Sum Matrix in Java"},sidebar:"tutorialSidebar",previous:{title:"Transpose Matrix",permalink:"/docs/three/java/other/Transpose"},next:{title:"Diagonal Sum Matrix",permalink:"/docs/three/java/other/DiagSum"}},l={},c=[{value:"CODE",id:"code",level:2}];function d(n){const t={h1:"h1",h2:"h2",...(0,r.a)(),...n.components};return(0,e.jsxs)(e.Fragment,{children:[(0,e.jsx)(t.h1,{id:"column-sum-matrix",children:"Column Sum Matrix"}),"\n",(0,e.jsx)(t.h2,{id:"code",children:"CODE"}),"\n",(0,e.jsx)(o.Z,{language:"java",children:a})]})}function p(n={}){const{wrapper:t}={...(0,r.a)(),...n.components};return t?(0,e.jsx)(t,{...n,children:(0,e.jsx)(d,{...n})}):d(n)}}}]);