"use strict";(self.webpackChunkdocsv_2=self.webpackChunkdocsv_2||[]).push([[6383],{1598:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>p,contentTitle:()=>d,default:()=>x,frontMatter:()=>c,metadata:()=>i,toc:()=>u});const i=JSON.parse('{"id":"java/Exception","title":"Exceptions","description":"Exceptions in Java","source":"@site/docs/three/java/Exception.mdx","sourceDirName":"java","slug":"/java/Exception","permalink":"/docs/three/java/Exception","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":10,"frontMatter":{"sidebar_position":10,"description":"Exceptions in Java"},"sidebar":"tutorialSidebar","previous":{"title":"Interfaces","permalink":"/docs/three/java/Interface"},"next":{"title":"Multi Threading","permalink":"/docs/three/java/Multithread"}}');var s=t(4848),a=t(8453),r=t(1432);const o='import java.util.Scanner;\n\nclass MyExceptionDemo {\n    static void OddNoException() throws OddException {\n        Scanner sc = new Scanner(System.in);\n        System.out.print("Enter a number: ");\n        int num = sc.nextInt();\n        if (num % 2 != 0) {\n            throw new OddException(num);\n        } else {\n            System.out.println(num + " is an even number");\n        }\n    }\n\n    public static void main(String[] args) {\n        try {\n            OddNoException();\n        } catch (OddException e) {\n            System.out.println(e);\n        }\n        System.out.println("End of program");\n    }\n}\n\nclass OddException extends Exception {\n    int num;\n    OddException(int x) {\n        num = x;\n    }\n    public String toString() {\n        return "OddException: " + num + " is an odd number";\n    }\n}',c={sidebar_position:10,description:"Exceptions in Java"},d="Exceptions",p={},u=[{value:"CODE",id:"code",level:2}];function l(n){const e={h1:"h1",h2:"h2",header:"header",...(0,a.R)(),...n.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.header,{children:(0,s.jsx)(e.h1,{id:"exceptions",children:"Exceptions"})}),"\n",(0,s.jsx)(e.h2,{id:"code",children:"CODE"}),"\n",(0,s.jsx)(r.A,{language:"java",children:o})]})}function x(n={}){const{wrapper:e}={...(0,a.R)(),...n.components};return e?(0,s.jsx)(e,{...n,children:(0,s.jsx)(l,{...n})}):l(n)}}}]);