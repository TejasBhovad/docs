"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5200],{1214:(n,t,e)=>{e.r(t),e.d(t,{assets:()=>d,contentTitle:()=>c,default:()=>m,frontMatter:()=>s,metadata:()=>r,toc:()=>p});var i=e(7462),o=(e(7294),e(3905)),a=e(814);const s={sidebar_position:10,description:"Exceptions in Java"},c="Exceptions",r={unversionedId:"java/Exception",id:"java/Exception",title:"Exceptions",description:"Exceptions in Java",source:"@site/docs/java/Exception.mdx",sourceDirName:"java",slug:"/java/Exception",permalink:"/docs/java/Exception",draft:!1,tags:[],version:"current",sidebarPosition:10,frontMatter:{sidebar_position:10,description:"Exceptions in Java"},sidebar:"tutorialSidebar",previous:{title:"Interfaces",permalink:"/docs/java/Interface"},next:{title:"Multi Threading",permalink:"/docs/java/Multithread"}},d={},p=[{value:"CODE",id:"code",level:2}],u={toc:p};function m(n){let{components:t,...e}=n;return(0,o.kt)("wrapper",(0,i.Z)({},u,e,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"exceptions"},"Exceptions"),(0,o.kt)("h2",{id:"code"},"CODE"),(0,o.kt)(a.Z,{language:"java",mdxType:"CodeBlock"},'import java.util.Scanner;\n\nclass MyExceptionDemo {\n    static void OddNoException() throws OddException {\n        Scanner sc = new Scanner(System.in);\n        System.out.print("Enter a number: ");\n        int num = sc.nextInt();\n        if (num % 2 != 0) {\n            throw new OddException(num);\n        } else {\n            System.out.println(num + " is an even number");\n        }\n    }\n\n    public static void main(String[] args) {\n        try {\n            OddNoException();\n        } catch (OddException e) {\n            System.out.println(e);\n        }\n        System.out.println("End of program");\n    }\n}\n\nclass OddException extends Exception {\n    int num;\n    OddException(int x) {\n        num = x;\n    }\n    public String toString() {\n        return "OddException: " + num + " is an odd number";\n    }\n}'))}m.isMDXComponent=!0}}]);