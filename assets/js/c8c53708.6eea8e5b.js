"use strict";(self.webpackChunkdocsv_2=self.webpackChunkdocsv_2||[]).push([[7040],{3547:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>d,contentTitle:()=>a,default:()=>u,frontMatter:()=>l,metadata:()=>t,toc:()=>h});const t=JSON.parse('{"id":"algorithms/lcs","title":"Longest Common Subsequence","description":"Longest Common Subsequence in C","source":"@site/docs/three/algorithms/lcs.mdx","sourceDirName":"algorithms","slug":"/algorithms/lcs","permalink":"/docs/three/algorithms/lcs","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":12,"frontMatter":{"sidebar_position":12,"description":"Longest Common Subsequence in C"},"sidebar":"tutorialSidebar","previous":{"title":"Bellman Ford","permalink":"/docs/three/algorithms/bellmanFord"},"next":{"title":"Floyd Warshall Algorithm","permalink":"/docs/three/algorithms/warshall"}}');var s=i(4848),r=i(8453),o=i(1432);const c='// WAP to find the longest common subsequence of two strings.\n#include <stdio.h>\n#include <string.h>\n#define MAX 100\nvoid printLCS(char b[MAX][MAX], char X[MAX], int i, int j)\n{\n    if (i == 0 || j == 0)\n        return;\n    if (b[i][j] == \'D\')\n    {\n        printLCS(b, X, i - 1, j - 1);\n        printf("%c", X[i - 1]);\n    }\n    else if (b[i][j] == \'U\')\n        printLCS(b, X, i - 1, j);\n    else\n        printLCS(b, X, i, j - 1);\n}\n\nvoid lcs(char X[MAX], char Y[MAX], int m, int n)\n{\n    int c[MAX][MAX];\n    char b[MAX][MAX];\n\n    for (int i = 0; i <= m; i++)\n        c[i][0] = 0;\n    for (int j = 0; j <= n; j++)\n        c[0][j] = 0;\n\n    for (int i = 1; i <= m; i++)\n        for (int j = 1; j <= n; j++)\n        {\n\n            if (X[i - 1] == Y[j - 1])\n            {\n                c[i][j] = c[i - 1][j - 1] + 1;\n                b[i][j] = \'D\';\n            }\n            else if (c[i - 1][j] >= c[i][j - 1])\n            {\n                c[i][j] = c[i - 1][j];\n                b[i][j] = \'U\';\n            }\n            else\n            {\n                c[i][j] = c[i][j - 1];\n                b[i][j] = \'L\';\n            }\n        }\n\n    printf("The longest common subsequence is: ");\n    printLCS(b, X, m, n);\n    printf("\\n");\n}\n\nint main()\n{\n    char X[MAX], Y[MAX];\n    printf("Enter the first string: ");\n    scanf("%s", X);\n    printf("Enter the second string: ");\n    scanf("%s", Y);\n\n    int m = strlen(X);\n    int n = strlen(Y);\n\n    lcs(X, Y, m, n);\n    return 0;\n}',l={sidebar_position:12,description:"Longest Common Subsequence in C"},a="Longest Common Subsequence",d={},h=[{value:"CODE",id:"code",level:2}];function m(n){const e={h1:"h1",h2:"h2",header:"header",...(0,r.R)(),...n.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.header,{children:(0,s.jsx)(e.h1,{id:"longest-common-subsequence",children:"Longest Common Subsequence"})}),"\n",(0,s.jsx)(e.h2,{id:"code",children:"CODE"}),"\n",(0,s.jsx)(o.A,{language:"c",children:c})]})}function u(n={}){const{wrapper:e}={...(0,r.R)(),...n.components};return e?(0,s.jsx)(e,{...n,children:(0,s.jsx)(m,{...n})}):m(n)}}}]);