"use strict";(self.webpackChunkdocsv_2=self.webpackChunkdocsv_2||[]).push([[1723],{9344:(n,i,t)=>{t.r(i),t.d(i,{assets:()=>h,contentTitle:()=>d,default:()=>u,frontMatter:()=>c,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"algorithms/quickSort","title":"Quick Sort","description":"Quick Sort in C","source":"@site/docs/three/algorithms/quickSort.mdx","sourceDirName":"algorithms","slug":"/algorithms/quickSort","permalink":"/docs/three/algorithms/quickSort","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":7,"frontMatter":{"sidebar_position":7,"description":"Quick Sort in C"},"sidebar":"tutorialSidebar","previous":{"title":"Merge Sort","permalink":"/docs/three/algorithms/mergeSort"},"next":{"title":"Knapsack problem","permalink":"/docs/three/algorithms/knapsack"}}');var e=t(4848),o=t(8453),s=t(1432);const a='// wap to implement quick sort\n#include <stdio.h>\nint ar[100], i, j, k, n, mid;\n\nvoid swap(int i, int j)\n{\n    int temp = ar[i];\n    ar[i] = ar[j];\n    ar[j] = temp;\n}\nint partition(int low, int high)\n{\n    int pivot = ar[low];\n    i = low;\n    j = high;\n    while (i <= j)\n    {\n        while (ar[i] <= pivot && i <= high)\n            i++;\n        while (ar[j] > pivot)\n            j--;\n        if (i < j)\n        {\n            swap(i, j);\n        }\n    }\n    swap(low, j);\n    return j;\n}\nvoid qSort(int low, int high)\n{\n    if (low < high)\n    {\n        mid = partition(low, high);\n        qSort(low, mid - 1);\n        qSort(mid + 1, high);\n    }\n}\nint main()\n{\n    printf("Enter N: ");\n    scanf("%d", &n);\n    printf("Enter Array Elements: \\n");\n    for (i = 0; i < n; i++)\n    {\n        scanf("%d", &ar[i]);\n    }\n    qSort(0, n - 1);\n    printf("Sorted Array: \\n");\n    for (i = 0; i < n; i++)\n    {\n        printf("%d ", ar[i]);\n    }\n    printf("\\n");\n    return 0;\n}',c={sidebar_position:7,description:"Quick Sort in C"},d="Quick Sort",h={},l=[{value:"CODE",id:"code",level:2}];function p(n){const i={h1:"h1",h2:"h2",header:"header",...(0,o.R)(),...n.components};return(0,e.jsxs)(e.Fragment,{children:[(0,e.jsx)(i.header,{children:(0,e.jsx)(i.h1,{id:"quick-sort",children:"Quick Sort"})}),"\n",(0,e.jsx)(i.h2,{id:"code",children:"CODE"}),"\n",(0,e.jsx)(s.A,{language:"c",children:a})]})}function u(n={}){const{wrapper:i}={...(0,o.R)(),...n.components};return i?(0,e.jsx)(i,{...n,children:(0,e.jsx)(p,{...n})}):p(n)}}}]);