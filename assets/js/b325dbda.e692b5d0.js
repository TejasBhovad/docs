"use strict";(self.webpackChunkdocsv_2=self.webpackChunkdocsv_2||[]).push([[4646],{6843:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>p,contentTitle:()=>l,default:()=>u,frontMatter:()=>c,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"java/assignment/interface","title":"Interface problem","description":"Interface problem","source":"@site/docs/three/java/assignment/interface.mdx","sourceDirName":"java/assignment","slug":"/java/assignment/interface","permalink":"/docs/three/java/assignment/interface","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3,"description":"Interface problem"},"sidebar":"tutorialSidebar","previous":{"title":"Multithread problem","permalink":"/docs/three/java/assignment/mulithreading"},"next":{"title":"Exception problem","permalink":"/docs/three/java/assignment/exception"}}');var s=t(4848),a=t(8453),i=t(1432);const o='import java.util.Scanner;\n\npublic class Hybrid {\n    public static void main(String[] args) {\n        Result r = new Result();\n        r.getNumber();\n        r.getMarks();\n        r.putScore();\n        r.display();\n    }\n}\n\nclass Student {\n    int roll_no;\n    Scanner sc = new Scanner(System.in);\n\n    void getNumber() {\n        System.out.println("Enter Roll No: ");\n        roll_no = sc.nextInt();\n    }\n\n    void putNumber() {\n        System.out.println("Roll No: " + roll_no);\n    }\n}\n\nclass Test extends Student {\n    Scanner sc = new Scanner(System.in);\n    int sem1, sem2;\n\n    void getMarks() {\n        System.out.println("Enter Marks 1: ");\n        sem1 = sc.nextInt();\n        System.out.println("Enter Marks 2: ");\n        sem2 = sc.nextInt();\n    }\n\n    void putMarks() {\n        System.out.println("Marks 1: " + sem1);\n        System.out.println("Marks 2: " + sem2);\n    }\n}\n\ninterface Sports {\n    public float score = 90;\n\n    void putScore();\n}\n\nclass Result extends Test implements Sports {\n    Scanner sc = new Scanner(System.in);\n\n    float total;\n\n    public void putScore() {\n        // score = sc.nextFloat();\n    }\n\n    void display() {\n        putNumber();\n        putMarks();\n        putScore();\n        total = score + sem1 + sem2;\n        System.out.println("Total:" + total);\n    }\n\n}\n',c={sidebar_position:3,description:"Interface problem"},l="Interface problem",p={},d=[{value:"CODE",id:"code",level:2}];function m(n){const e={h1:"h1",h2:"h2",header:"header",...(0,a.R)(),...n.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.header,{children:(0,s.jsx)(e.h1,{id:"interface-problem",children:"Interface problem"})}),"\n",(0,s.jsx)(e.h2,{id:"code",children:"CODE"}),"\n",(0,s.jsx)(i.A,{language:"java",children:o})]})}function u(n={}){const{wrapper:e}={...(0,a.R)(),...n.components};return e?(0,s.jsx)(e,{...n,children:(0,s.jsx)(m,{...n})}):m(n)}}}]);