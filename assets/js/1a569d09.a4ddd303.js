"use strict";(self.webpackChunkdocsv_2=self.webpackChunkdocsv_2||[]).push([[6718],{7088:(n,t,e)=>{e.r(t),e.d(t,{assets:()=>u,contentTitle:()=>c,default:()=>h,frontMatter:()=>i,metadata:()=>d,toc:()=>l});var r=e(5893),s=e(1151),o=e(9286);const a='#include <stdio.h>\nint N;\n\n// HANOI FUNCTION\nvoid Hanoi(int N, char src, char dest, char aux)\n{\n    // CHECK IF ONE DISK PRESENT\n    if (N == 1)\n    {\n        printf("\\nMove disk 1 from rod %c to rod %c", src, dest);\n        return;\n    }\n    Hanoi(N - 1, src, aux, dest);\n    printf("\\nMove disk %d from rod %c to rod %c", N, src, dest);\n    Hanoi(N - 1, aux, dest, src);\n}\nint main()\n{\n    printf("Enter the number of Disks: ");\n    scanf("%d", &N);\n    printf("\\n");\n    printf("Moves:");\n    Hanoi(N, \'A\', \'C\', \'B\');\n    printf("\\n");\n\n    return 0;\n}',i={sidebar_position:1,description:"Stack based Puzzle"},c="Tower of Hanoi",d={id:"Data Structures/stacks/hanoiTower",title:"Tower of Hanoi",description:"Stack based Puzzle",source:"@site/docs/two/Data Structures/stacks/hanoiTower.mdx",sourceDirName:"Data Structures/stacks",slug:"/Data Structures/stacks/hanoiTower",permalink:"/docs/two/Data Structures/stacks/hanoiTower",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,description:"Stack based Puzzle"},sidebar:"tutorialSidebar",previous:{title:"Stacks",permalink:"/docs/two/category/stacks"},next:{title:"Stack",permalink:"/docs/two/Data Structures/stacks/"}},u={},l=[];function f(n){const t={a:"a",h1:"h1",p:"p",...(0,s.a)(),...n.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h1,{id:"tower-of-hanoi",children:"Tower of Hanoi"}),"\n",(0,r.jsxs)(t.p,{children:["Find a visual representation of solution of Tower of Hanoi ",(0,r.jsx)(t.a,{href:"https://yongdanielliang.github.io/animation/web/TowerOfHanoi.html",children:"here"})]}),"\n",(0,r.jsx)(o.Z,{language:"c",children:a})]})}function h(n={}){const{wrapper:t}={...(0,s.a)(),...n.components};return t?(0,r.jsx)(t,{...n,children:(0,r.jsx)(f,{...n})}):f(n)}}}]);