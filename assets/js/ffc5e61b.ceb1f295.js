"use strict";(self.webpackChunkdocsv_2=self.webpackChunkdocsv_2||[]).push([[6661],{3750:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>r,default:()=>T,frontMatter:()=>E,metadata:()=>o,toc:()=>i});var s=n(5893),a=n(1151),d=n(9163);const E={title:"Objects and nested Objects in SQL",sidebar_position:1,description:"Creating Nested objects in SQL"},r="RDBMS",o={id:"advanced-databases/rdbms/objects",title:"Objects and nested Objects in SQL",description:"Creating Nested objects in SQL",source:"@site/docs/five/advanced-databases/rdbms/objects.mdx",sourceDirName:"advanced-databases/rdbms",slug:"/advanced-databases/rdbms/objects",permalink:"/docs/five/advanced-databases/rdbms/objects",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"Objects and nested Objects in SQL",sidebar_position:1,description:"Creating Nested objects in SQL"},sidebar:"tutorialSidebar",previous:{title:"RDBMS",permalink:"/docs/five/category/rdbms"},next:{title:" Nested Tables in SQL",permalink:"/docs/five/advanced-databases/rdbms/tables"}},c={},i=[{value:"Write a SQL query to show usage of objects in SQL.",id:"write-a-sql-query-to-show-usage-of-objects-in-sql",level:2},{value:"Write a SQL query to add methods to Objects",id:"write-a-sql-query-to-add-methods-to-objects",level:2},{value:"Write a SQL query to show usage of nested objects in SQL",id:"write-a-sql-query-to-show-usage-of-nested-objects-in-sql",level:2}];function l(e){const t={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,a.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h1,{id:"rdbms",children:(0,s.jsx)(d.Z,{name:"banner",description:"Objects and nested Objects",children:"RDBMS"})}),"\n",(0,s.jsx)(t.h2,{id:"write-a-sql-query-to-show-usage-of-objects-in-sql",children:"Write a SQL query to show usage of objects in SQL."}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-sql",children:"-- BASIC OBJECTS\n-- Step 1: Create the Address Object Type\nCREATE OR REPLACE TYPE Address AS OBJECT (\n    street VARCHAR2(50),\n    city VARCHAR2(30),\n    state CHAR(2),\n    zip VARCHAR2(10)\n);\n/\n\n-- Step 2: Create the EMPLOYEE Table\nCREATE TABLE EMPLOYEE (\n    empId INT PRIMARY KEY,\n    name VARCHAR2(15),\n    dept VARCHAR2(10),\n    address Address\n);\n\n-- Step 3: Insert Data into the EMPLOYEE Table\nINSERT INTO EMPLOYEE(empId, name, dept, address)\nVALUES (1, 'Clark', 'Sales', Address('123 Main St', 'Anytown', 'CA', '12345'));\n\nINSERT INTO EMPLOYEE(empId, name, dept, address)\nVALUES (2, 'Dave', 'Accounting', Address('456 Oak Ave', 'Somewhere', 'NY', '54321'));\n\nINSERT INTO EMPLOYEE(empId, name, dept, address)\nVALUES (3, 'Ava', 'Sales', Address('789 Elm St', 'Elsewhere', 'TX', '98765'));\n\n-- Step 4: Update the Address of Employee with empId = 1\nUPDATE EMPLOYEE\nSET address = Address('321 Maple St', 'Newtown', 'CA', '67890')\nWHERE empId = 1;\n\n-- Step 5: Fetch the Data from the EMPLOYEE Table\nSELECT * FROM EMPLOYEE;\n\n-- Step 6: Delete the Employee with empId = 2\nDELETE FROM EMPLOYEE\nWHERE empId = 2;\n\n\n"})}),"\n",(0,s.jsx)(t.admonition,{type:"note",children:(0,s.jsxs)(t.p,{children:["To compile and run the program, either use ",(0,s.jsx)(t.a,{href:"https://www.oracle.com/in/database/technologies/appdev/xe.html",children:"Oracle XE"})," or ",(0,s.jsx)(t.a,{href:"https://onecompiler.com/plsql",children:"OneCompiler"})]})}),"\n",(0,s.jsx)(t.h2,{id:"write-a-sql-query-to-add-methods-to-objects",children:"Write a SQL query to add methods to Objects"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-sql",children:"-- OBJECTS FUNCTIONS\n\nCREATE TYPE EMPLOYEE_TY AS OBJECT\n(\n  EMPLOYEE_ID   NUMBER(6),\n  FIRST_NAME   VARCHAR2(20),\n  LAST_NAME    VARCHAR2(25),\n  EMAIL        VARCHAR2(65),\n  SALARY       NUMBER(8,2),\n  DOB          DATE,\n  MEMBER FUNCTION GET_AGE RETURN NUMBER\n)\n/\n\nCREATE TYPE BODY EMPLOYEE_TY AS\n  MEMBER FUNCTION GET_AGE RETURN NUMBER\n  IS\n  BEGIN\n    RETURN TRUNC(MONTHS_BETWEEN(SYSDATE, DOB) / 12);\n  END GET_AGE;\nEND;\n/\n\nCREATE TABLE EMPLOYEES OF EMPLOYEE_TY;\n\nINSERT INTO EMPLOYEES VALUES\n(EMPLOYEE_TY(100, 'John', 'Doe', 'john.doe@example.com', 5000.00, DATE '1985-01-01'));\n\nSELECT e.FIRST_NAME, e.LAST_NAME, e.SALARY, e.GET_AGE() AS AGE\nFROM EMPLOYEES e;\n\n"})}),"\n",(0,s.jsx)(t.h2,{id:"write-a-sql-query-to-show-usage-of-nested-objects-in-sql",children:"Write a SQL query to show usage of nested objects in SQL"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-sql",children:"-- (DONT WRITE BELOW BEGIN BLOCK IN EXAM)\nBEGIN\n   EXECUTE IMMEDIATE 'DROP TABLE TeacherData';\n   EXECUTE IMMEDIATE 'DROP TYPE Teacher';\n   EXECUTE IMMEDIATE 'DROP TYPE Class';\n   EXECUTE IMMEDIATE 'DROP TYPE Student';\nEXCEPTION\n   WHEN OTHERS THEN NULL; -- Ignore errors if objects do not exist\nEND;\n/\n\n--- ACTUAL CODE STARTS HERE\n\n-- Step 1: Create the Student Object Type\nCREATE OR REPLACE TYPE Student AS OBJECT (\n    studentId INT,\n    studentName VARCHAR2(50)\n);\n/\n\n-- Step 2: Create the Class Object Type\nCREATE OR REPLACE TYPE Class AS OBJECT (\n    className VARCHAR2(50),\n    students Student -- Single Student object\n);\n/\n\n-- Step 3: Create the Teacher Object Type\nCREATE OR REPLACE TYPE Teacher AS OBJECT (\n    teacherId INT,\n    teacherName VARCHAR2(50),\n    subject VARCHAR2(50),\n    classes Class -- Single Class object\n);\n/\n\n-- Step 4: Create a Table to Store Teacher Objects\nCREATE TABLE TeacherData OF Teacher;\n/\n\n-- Step 5: Insert Data into the TeacherData\nINSERT INTO TeacherData VALUES (\n    Teacher(1, 'Mr. Smith', 'Mathematics', Class('Algebra', Student(101, 'Alice')))\n);\n\nINSERT INTO TeacherData VALUES (\n    Teacher(2, 'Mrs. Johnson', 'Science', Class('Biology', Student(102, 'Bob')))\n);\n\nINSERT INTO TeacherData VALUES (\n    Teacher(3, 'Ms. Davis', 'History', Class('World History', Student(103, 'Charlie')))\n);\n\n-- Step 6: Fetch the Data from the TeacherData\nSELECT t.teacherId, t.teacherName, t.subject, t.classes.className,\n       t.classes.students.studentId, t.classes.students.studentName\nFROM TeacherData t;\n\n-- Step 7: Update a Student's Name\nUPDATE TeacherData\nSET classes = Class('Algebra', Student(101, 'Alicia'))\nWHERE teacherId = 1;\n\n-- Step 9: Fetch the Data from the TeacherData after Update and Delete\nSELECT t.teacherId, t.teacherName, t.subject, t.classes.className,\n       t.classes.students.studentId, t.classes.students.studentName\nFROM TeacherData t;\n\n"})})]})}function T(e={}){const{wrapper:t}={...(0,a.a)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},9163:(e,t,n)=>{n.d(t,{Z:()=>d});n(7294);var s=n(4996),a=n(5893);const d=e=>{let{name:t,description:n,children:d}=e;const E=(0,s.ZP)(`/images/${t}.jpg`);return(0,a.jsxs)("div",{style:{display:"inline-block",height:"150px",width:"100%",position:"relative",overflow:"hidden",borderRadius:"5px"},children:[(0,a.jsx)("img",{src:E,alt:E,style:{width:"100%",height:"100%",objectFit:"cover",position:"absolute",zIndex:-1}}),(0,a.jsx)("h2",{style:{color:"white",padding:"12px",boxSizing:"border-box",paddingBottom:"0px",fontWeight:"500"},children:d}),(0,a.jsx)("p",{style:{color:"white",paddingTop:"0px",paddingBottom:"12px",paddingLeft:"12px",paddingRight:"12px",boxSizing:"border-box"},children:n})]})}},1151:(e,t,n)=>{n.d(t,{Z:()=>r,a:()=>E});var s=n(7294);const a={},d=s.createContext(a);function E(e){const t=s.useContext(d);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:E(e.components),s.createElement(d.Provider,{value:t},e.children)}}}]);