"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5121],{2638:(e,i,a)=>{a.r(i),a.d(i,{assets:()=>d,contentTitle:()=>s,default:()=>u,frontMatter:()=>o,metadata:()=>m,toc:()=>c});var n=a(7462),r=(a(7294),a(3905)),t=a(814);const o={sidebar_position:2,description:"Prime Numbers in Java"},s="Prime Numbers from 1 to 1000",m={unversionedId:"java/Prime",id:"java/Prime",title:"Prime Numbers from 1 to 1000",description:"Prime Numbers in Java",source:"@site/docs/java/Prime.mdx",sourceDirName:"java",slug:"/java/Prime",permalink:"/docs/java/Prime",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,description:"Prime Numbers in Java"},sidebar:"tutorialSidebar",previous:{title:"Grades in Java",permalink:"/docs/java/Grades"},next:{title:"Rectangle area and perimeter",permalink:"/docs/java/Rectangle"}},d={},c=[{value:"CODE",id:"code",level:2}],l={toc:c};function u(e){let{components:i,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},l,a,{components:i,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"prime-numbers-from-1-to-1000"},"Prime Numbers from 1 to 1000"),(0,r.kt)("h2",{id:"code"},"CODE"),(0,r.kt)(t.Z,{language:"java",mdxType:"CodeBlock"},"public class Prime {\n\n    public static void main(String[] args) {\n        int N = 1000;\n        for (int i = 2; i < N; i++) {\n            int flag = 0;\n            for (int j = 2; j < i; j++) {\n                if (i % j == 0) {\n                    // increment flag if divisible\n                    flag++;\n                    break;\n                }\n            }\n            if (flag == 0) {\n                System.out.println(i);\n            }\n        }\n\n    }\n}"))}u.isMDXComponent=!0}}]);