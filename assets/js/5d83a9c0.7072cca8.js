"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[31],{8950:(n,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>d,frontMatter:()=>s,metadata:()=>m,toc:()=>l});var e=a(7462),r=(a(7294),a(3905)),i=a(814);const s={sidebar_position:11,description:"Transpose Matrix in Java"},o="Transpose Matrix",m={unversionedId:"java/other/Transpose",id:"java/other/Transpose",title:"Transpose Matrix",description:"Transpose Matrix in Java",source:"@site/docs/java/other/Transpose.mdx",sourceDirName:"java/other",slug:"/java/other/Transpose",permalink:"/docs/java/other/Transpose",draft:!1,tags:[],version:"current",sidebarPosition:11,frontMatter:{sidebar_position:11,description:"Transpose Matrix in Java"},sidebar:"tutorialSidebar",previous:{title:"Sort Array",permalink:"/docs/java/other/ArSort"},next:{title:"Column Sum Matrix",permalink:"/docs/java/other/ColSum"}},p={},l=[{value:"CODE",id:"code",level:2}],c={toc:l};function d(n){let{components:t,...a}=n;return(0,r.kt)("wrapper",(0,e.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"transpose-matrix"},"Transpose Matrix"),(0,r.kt)("h2",{id:"code"},"CODE"),(0,r.kt)(i.Z,{language:"java",mdxType:"CodeBlock"},'\n//  WAP to print transpose of a matrix take matrix from user\nimport java.util.Scanner;\n\npublic class Transpose {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int r, c;\n        System.out.println("Enter the number of rows: ");\n        r = sc.nextInt();\n        System.out.println("Enter the number of columns: ");\n        c = sc.nextInt();\n        int mat[][] = new int[r][c];\n        Matrix m = new Matrix();\n        mat = m.read(mat);\n        System.out.println("Original matrix: ");\n        m.display(mat);\n        System.out.println("Transpose of matrix: ");\n        m.display(m.transpose(mat));\n\n    }\n}\n\nclass Matrix {\n    int[][] transpose(int[][] mat) {\n        int[][] t = new int[mat[0].length][mat.length];\n        for (int i = 0; i < mat[0].length; i++)\n            for (int j = 0; j < mat.length; j++)\n                t[i][j] = mat[j][i];\n        return t;\n    }\n\n    void display(int[][] mat) {\n        for (int i = 0; i < mat[0].length; i++) {\n            for (int j = 0; j < mat.length; j++)\n                System.out.print(mat[i][j] + " ");\n            System.out.println();\n        }\n    }\n\n    int[][] read(int[][] mat) {\n        Scanner sc = new Scanner(System.in);\n        System.out.println("Enter the elements: ");\n        for (int i = 0; i < mat[0].length; i++)\n            for (int j = 0; j < mat.length; j++)\n                mat[i][j] = sc.nextInt();\n        return mat;\n    }\n}'))}d.isMDXComponent=!0}}]);