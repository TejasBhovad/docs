"use strict";(self.webpackChunkdocsv_2=self.webpackChunkdocsv_2||[]).push([[515],{2062:(a,t,e)=>{e.r(t),e.d(t,{assets:()=>d,contentTitle:()=>l,default:()=>p,frontMatter:()=>s,metadata:()=>n,toc:()=>h});const n=JSON.parse('{"id":"java/other/Factorial","title":"Factorial","description":"Factorial in Java","source":"@site/docs/three/java/other/Factorial.mdx","sourceDirName":"java/other","slug":"/java/other/Factorial","permalink":"/docs/three/java/other/Factorial","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":6,"frontMatter":{"sidebar_position":6,"description":"Factorial in Java"},"sidebar":"tutorialSidebar","previous":{"title":"Constuctor Student","permalink":"/docs/three/java/other/StudentCon"},"next":{"title":"Fibonacci series","permalink":"/docs/three/java/other/Fibonnaci"}}');var r=e(4848),i=e(8453),o=e(1432);const c='// WAP to print factorial of a number using recursion\npublic class Factorial {\n    int fact(int n) {\n        if (n == 1)\n            return 1;\n        else\n            return n * fact(n - 1);\n    }\n\n   public static void main(String[] args) {\n        Factorial f = new Factorial();\n        System.out.println("Factorial of 5 is: " + f.fact(5));\n    }\n}\n',s={sidebar_position:6,description:"Factorial in Java"},l="Factorial",d={},h=[{value:"CODE",id:"code",level:2}];function u(a){const t={h1:"h1",h2:"h2",header:"header",...(0,i.R)(),...a.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"factorial",children:"Factorial"})}),"\n",(0,r.jsx)(t.h2,{id:"code",children:"CODE"}),"\n",(0,r.jsx)(o.A,{language:"java",children:c})]})}function p(a={}){const{wrapper:t}={...(0,i.R)(),...a.components};return t?(0,r.jsx)(t,{...a,children:(0,r.jsx)(u,{...a})}):u(a)}}}]);