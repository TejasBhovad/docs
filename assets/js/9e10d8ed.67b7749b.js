"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1004],{4884:(i,e,t)=>{t.r(e),t.d(e,{assets:()=>c,contentTitle:()=>o,default:()=>l,frontMatter:()=>n,metadata:()=>m,toc:()=>d});var r=t(7462),s=(t(7294),t(3905)),a=t(814);const n={sidebar_position:5,description:"Prime Numbers in Java"},o="Prime Numbers from 1 to 100",m={unversionedId:"java/basics/Prime",id:"java/basics/Prime",title:"Prime Numbers from 1 to 100",description:"Prime Numbers in Java",source:"@site/docs/java/basics/Prime.mdx",sourceDirName:"java/basics",slug:"/java/basics/Prime",permalink:"/docs/java/basics/Prime",draft:!1,tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5,description:"Prime Numbers in Java"},sidebar:"tutorialSidebar",previous:{title:"Student Details",permalink:"/docs/java/basics/StudentDetail"},next:{title:"Algorithms",permalink:"/docs/category/algorithms"}},c={},d=[{value:"CODE",id:"code",level:2}],u={toc:d};function l(i){let{components:e,...t}=i;return(0,s.kt)("wrapper",(0,r.Z)({},u,t,{components:e,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"prime-numbers-from-1-to-100"},"Prime Numbers from 1 to 100"),(0,s.kt)("h2",{id:"code"},"CODE"),(0,s.kt)(a.Z,{language:"java",mdxType:"CodeBlock"},"public class Prime {\n\n    public static void main(String[] args) {\n        int N = 100;\n        for (int i = 2; i <= N; i++) {\n            boolean isPrime = true;\n            // check if i is prime\n            for (int j = 2; j < i; j++) {\n                if (i % j == 0) {\n                    // i is not prime\n                    isPrime = false;\n                    break;\n                }\n            }\n            if (isPrime) {\n                System.out.println(i);\n            }\n        }\n\n    }\n}"))}l.isMDXComponent=!0}}]);