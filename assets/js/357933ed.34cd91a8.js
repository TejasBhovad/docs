"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2688],{1573:(t,n,e)=>{e.r(n),e.d(n,{assets:()=>o,contentTitle:()=>d,default:()=>p,frontMatter:()=>s,metadata:()=>l,toc:()=>u});var i=e(7462),a=(e(7294),e(3905)),r=e(814);const s={sidebar_position:11,description:"Multiple threads in Java"},d="Multi Threading",l={unversionedId:"java/Multithread",id:"java/Multithread",title:"Multi Threading",description:"Multiple threads in Java",source:"@site/docs/java/Multithread.mdx",sourceDirName:"java",slug:"/java/Multithread",permalink:"/docs/java/Multithread",draft:!1,tags:[],version:"current",sidebarPosition:11,frontMatter:{sidebar_position:11,description:"Multiple threads in Java"},sidebar:"tutorialSidebar",previous:{title:"Exceptions",permalink:"/docs/java/Exception"},next:{title:"Calculator",permalink:"/docs/java/Calculator"}},o={},u=[{value:"CODE",id:"code",level:2}],c={toc:u};function p(t){let{components:n,...e}=t;return(0,a.kt)("wrapper",(0,i.Z)({},c,e,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"multi-threading"},"Multi Threading"),(0,a.kt)("h2",{id:"code"},"CODE"),(0,a.kt)(r.Z,{language:"java",mdxType:"CodeBlock"},"class MultiThread {\n    public static void main(String[] args) {\n\n        PrintNumbers pn = new PrintNumbers();\n        PrintSquares ps = new PrintSquares();\n        pn.t1.start();\n        ps.t2.start();\n    }\n}\n\nclass PrintNumbers implements Runnable {\n    Thread t1;\n\n    PrintNumbers() {\n        t1 = new Thread(this);\n    }\n\n    public void run() {\n        for (int i = 1; i <= 10; i++) {\n            System.out.println(i);\n        }\n    }\n}\n\nclass PrintSquares implements Runnable {\n    Thread t2;\n\n    PrintSquares() {\n        t2 = new Thread(this);\n    }\n\n    public void run() {\n        for (int i = 1; i <= 10; i++) {\n            System.out.println(i * i);\n        }\n    }\n}"))}p.isMDXComponent=!0}}]);