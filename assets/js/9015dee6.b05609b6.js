"use strict";(self.webpackChunkdocsv_2=self.webpackChunkdocsv_2||[]).push([[7218],{5372:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>d,default:()=>g,frontMatter:()=>a,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"advanced-databases/mongodb/index","title":"References","description":"References for MongoDB","source":"@site/docs/five/advanced-databases/mongodb/index.mdx","sourceDirName":"advanced-databases/mongodb","slug":"/advanced-databases/mongodb/","permalink":"/docs/five/advanced-databases/mongodb/","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"title":"References","sidebar_position":1,"description":"References for MongoDB"},"sidebar":"tutorialSidebar","previous":{"title":"MongoDB","permalink":"/docs/five/category/mongodb"},"next":{"title":"Experiment 1","permalink":"/docs/five/advanced-databases/objects"}}');var i=t(4848),r=t(8453),o=t(8731);const a={title:"References",sidebar_position:1,description:"References for MongoDB"},d="MONGODB",l={},c=[{value:"Reference links",id:"reference-links",level:2},{value:"CRUD Operations in MongoDB",id:"crud-operations-in-mongodb",level:2},{value:"1. Create Operations",id:"1-create-operations",level:3},{value:"Methods:",id:"methods",level:4},{value:"Example:",id:"example",level:4},{value:"2. Read Operations",id:"2-read-operations",level:3},{value:"Methods:",id:"methods-1",level:4},{value:"Example:",id:"example-1",level:4},{value:"3. Update Operations",id:"3-update-operations",level:3},{value:"Methods:",id:"methods-2",level:4},{value:"Example:",id:"example-2",level:4},{value:"4. Delete Operations",id:"4-delete-operations",level:3},{value:"Methods:",id:"methods-3",level:4},{value:"Example:",id:"example-3",level:4},{value:"Aggregation in MongoDB",id:"aggregation-in-mongodb",level:2},{value:"What is Aggregation?",id:"what-is-aggregation",level:3},{value:"Key Features of Aggregation:",id:"key-features-of-aggregation",level:3},{value:"Aggregation Methods",id:"aggregation-methods",level:3},{value:"1. Aggregation Pipeline",id:"1-aggregation-pipeline",level:4},{value:"Basic Structure:",id:"basic-structure",level:5},{value:"Example:",id:"example-4",level:5},{value:"2. Single-Purpose Aggregation Methods",id:"2-single-purpose-aggregation-methods",level:4},{value:"Example:",id:"example-5",level:5},{value:"Common Aggregation Operators",id:"common-aggregation-operators",level:3},{value:"Example of Using Multiple Operators:",id:"example-of-using-multiple-operators",level:5}];function h(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",h5:"h5",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"mongodb",children:(0,i.jsx)(o.A,{name:"banner",description:"Reference links",children:"MONGODB"})})}),"\n",(0,i.jsx)(n.h2,{id:"reference-links",children:"Reference links"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"https://www.mongodb.com/resources/products/fundamentals/crud",children:"https://www.mongodb.com/resources/products/fundamentals/crud"}),"\n",(0,i.jsx)(n.a,{href:"https://www.geeksforgeeks.org/mongodb-crud-operations/",children:"https://www.geeksforgeeks.org/mongodb-crud-operations/"}),"\n",(0,i.jsx)(n.a,{href:"https://www.mongodb.com/docs/manual/tutorial/query-documents/",children:"https://www.mongodb.com/docs/manual/tutorial/query-documents/"}),"\n",(0,i.jsx)(n.a,{href:"https://www.mongodb.com/docs/manual/aggregation/",children:"https://www.mongodb.com/docs/manual/aggregation/"})]}),"\n",(0,i.jsx)(n.h2,{id:"crud-operations-in-mongodb",children:"CRUD Operations in MongoDB"}),"\n",(0,i.jsx)(n.h3,{id:"1-create-operations",children:"1. Create Operations"}),"\n",(0,i.jsx)(n.p,{children:"Create operations are used to insert new documents into a collection. If the specified collection does not exist, MongoDB will create it automatically."}),"\n",(0,i.jsx)(n.h4,{id:"methods",children:"Methods:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"insertOne()"})}),": Inserts a single document into a collection."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"insertMany()"})}),": Inserts multiple documents into a collection."]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"example",children:"Example:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:'// Insert a single document\ndb.students.insertOne({\n  name: "John Doe",\n  age: 21,\n  major: "Computer Science",\n});\n\n// Insert multiple documents\ndb.students.insertMany([\n  { name: "Jane Smith", age: 22, major: "Mathematics" },\n  { name: "Sam Brown", age: 20, major: "Physics" },\n]);\n'})}),"\n",(0,i.jsx)(n.h3,{id:"2-read-operations",children:"2. Read Operations"}),"\n",(0,i.jsx)(n.p,{children:"Read operations are used to retrieve documents from a collection. You can specify query filters to narrow down the results."}),"\n",(0,i.jsx)(n.h4,{id:"methods-1",children:"Methods:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"find()"})}),": Retrieves documents from a collection. You can use filters to specify which documents to return."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"findOne()"})}),": Retrieves a single document that matches the specified criteria."]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"example-1",children:"Example:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:'// Retrieve all documents\ndb.students.find().pretty();\n\n// Retrieve documents with a specific condition\ndb.students.find({ major: "Computer Science" }).pretty();\n\n// Retrieve a single document\ndb.students.findOne({ name: "Jane Smith" });\n\n// Retrieve students who are majoring in Computer Science and are older than 20\ndb.students\n  .find({ $and: [{ major: "Computer Science" }, { age: { $gt: 20 } }] })\n  .pretty();\n\n// Retrieve students who are majoring in Mathematics and have an age of 22\ndb.students.find({ major: "Mathematics", age: 22 }).pretty();\n'})}),"\n",(0,i.jsx)(n.h3,{id:"3-update-operations",children:"3. Update Operations"}),"\n",(0,i.jsx)(n.p,{children:"Update operations modify existing documents in a collection. You can update one or multiple documents based on specified criteria."}),"\n",(0,i.jsx)(n.h4,{id:"methods-2",children:"Methods:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"updateOne()"})}),": Updates a single document that matches the specified criteria."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"updateMany()"})}),": Updates multiple documents that match the specified criteria."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"replaceOne()"})}),": Replaces a single document with a new document."]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"example-2",children:"Example:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:'// Update a single document\ndb.students.updateOne({ name: "John Doe" }, { $set: { age: 22 } });\n\n// Update multiple documents\ndb.students.updateMany(\n  { major: "Mathematics" },\n  { $set: { major: "Applied Mathematics" } }\n);\n\n// Replace a document\ndb.students.replaceOne(\n  { name: "Sam Brown" },\n  { name: "Samuel Brown", age: 21, major: "Physics" }\n);\n'})}),"\n",(0,i.jsx)(n.h3,{id:"4-delete-operations",children:"4. Delete Operations"}),"\n",(0,i.jsx)(n.p,{children:"Delete operations are used to remove documents from a collection. You can delete one or multiple documents based on specified criteria."}),"\n",(0,i.jsx)(n.h4,{id:"methods-3",children:"Methods:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"deleteOne()"})}),": Deletes a single document that matches the specified criteria."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"deleteMany()"})}),": Deletes multiple documents that match the specified criteria."]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"example-3",children:"Example:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:'// Delete a single document\ndb.students.deleteOne({ name: "John Doe" });\n\n// Delete multiple documents\ndb.students.deleteMany({ major: "Physics" });\n'})}),"\n",(0,i.jsx)(n.h2,{id:"aggregation-in-mongodb",children:"Aggregation in MongoDB"}),"\n",(0,i.jsx)(n.p,{children:"Aggregation in MongoDB is a powerful feature that allows users to process and analyze data from multiple documents in a collection. It enables complex data transformations and computations, making it essential for generating reports, analyzing trends, and summarizing data."}),"\n",(0,i.jsx)(n.h3,{id:"what-is-aggregation",children:"What is Aggregation?"}),"\n",(0,i.jsxs)(n.p,{children:["Aggregation operations in MongoDB group values from multiple documents together and perform various computations on the grouped data to return a single result. This is similar to SQL's ",(0,i.jsx)(n.code,{children:"GROUP BY"})," clause, where data is grouped and aggregated."]}),"\n",(0,i.jsx)(n.h3,{id:"key-features-of-aggregation",children:"Key Features of Aggregation:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Data Transformation"}),": Aggregation allows for the transformation of data as it passes through different stages."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Multiple Stages"}),": Aggregation pipelines can consist of multiple stages, each performing a specific operation on the data."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Flexibility"}),": Aggregation can handle complex queries and calculations, providing flexibility in data analysis."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"aggregation-methods",children:"Aggregation Methods"}),"\n",(0,i.jsx)(n.p,{children:"MongoDB provides two primary methods for performing aggregation:"}),"\n",(0,i.jsx)(n.h4,{id:"1-aggregation-pipeline",children:"1. Aggregation Pipeline"}),"\n",(0,i.jsx)(n.p,{children:"The aggregation pipeline is the preferred method for performing aggregations in MongoDB. It consists of a sequence of stages that process documents and transform the data."}),"\n",(0,i.jsx)(n.h5,{id:"basic-structure",children:"Basic Structure:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:"db.collection.aggregate([\n    { $stage1: { /* stage1 operations */ } },\n    { $stage2: { /* stage2 operations */ } },\n    ...\n])\n"})}),"\n",(0,i.jsx)(n.h5,{id:"example-4",children:"Example:"}),"\n",(0,i.jsx)(n.p,{children:"To calculate the total number of tutorials written by each user in a collection:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:'db.tutorials.aggregate([\n  { $group: { _id: "$by_user", num_tutorial: { $sum: 1 } } },\n]);\n'})}),"\n",(0,i.jsx)(n.p,{children:"This query will output a result similar to the following table:"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"_id"}),(0,i.jsx)(n.th,{children:"num_tutorial"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:'"user1"'}),(0,i.jsx)(n.td,{children:"5"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:'"user2"'}),(0,i.jsx)(n.td,{children:"3"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:'"user3"'}),(0,i.jsx)(n.td,{children:"7"})]})]})]}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"$group"})," stage groups the documents by the ",(0,i.jsx)(n.code,{children:"by_user"})," field and counts the number of documents for each user using the ",(0,i.jsx)(n.code,{children:"$sum"})," operator with a constant value of ",(0,i.jsx)(n.code,{children:"1"}),"."]}),"\n",(0,i.jsx)(n.h4,{id:"2-single-purpose-aggregation-methods",children:"2. Single-Purpose Aggregation Methods"}),"\n",(0,i.jsxs)(n.p,{children:["These methods provide simple access to common aggregation operations without the complexity of an aggregation pipeline. Examples include ",(0,i.jsx)(n.code,{children:"count()"}),", ",(0,i.jsx)(n.code,{children:"distinct()"}),", and ",(0,i.jsx)(n.code,{children:"estimatedDocumentCount()"}),"."]}),"\n",(0,i.jsx)(n.h5,{id:"example-5",children:"Example:"}),"\n",(0,i.jsx)(n.p,{children:"To count the total number of documents in a collection:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:"db.collection.countDocuments();\n"})}),"\n",(0,i.jsx)(n.p,{children:"This query will return the total number of documents in the specified collection."}),"\n",(0,i.jsx)(n.h3,{id:"common-aggregation-operators",children:"Common Aggregation Operators"}),"\n",(0,i.jsx)(n.p,{children:"MongoDB supports various operators that can be used within aggregation stages:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"$sum"})}),": Calculates the total sum of a specified field."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"$avg"})}),": Computes the average value of a specified field."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"$min"})}),": Finds the minimum value of a specified field."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"$max"})}),": Finds the maximum value of a specified field."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"$count"})}),": Counts the number of documents in a group."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"$push"})}),": Adds values to an array in the resulting document."]}),"\n"]}),"\n",(0,i.jsx)(n.h5,{id:"example-of-using-multiple-operators",children:"Example of Using Multiple Operators:"}),"\n",(0,i.jsx)(n.p,{children:"To calculate the average likes per user and total likes:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:'db.tutorials.aggregate([\n  {\n    $group: {\n      _id: "$by_user",\n      total_likes: { $sum: "$likes" },\n      average_likes: { $avg: "$likes" },\n    },\n  },\n]);\n'})}),"\n",(0,i.jsx)(n.p,{children:"This query will output a result similar to the following table:"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"_id"}),(0,i.jsx)(n.th,{children:"total_likes"}),(0,i.jsx)(n.th,{children:"average_likes"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:'"user1"'}),(0,i.jsx)(n.td,{children:"250"}),(0,i.jsx)(n.td,{children:"50.0"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:'"user2"'}),(0,i.jsx)(n.td,{children:"150"}),(0,i.jsx)(n.td,{children:"50.0"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:'"user3"'}),(0,i.jsx)(n.td,{children:"350"}),(0,i.jsx)(n.td,{children:"50.0"})]})]})]}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"$group"})," stage groups the documents by the ",(0,i.jsx)(n.code,{children:"by_user"})," field, calculates the total likes using the ",(0,i.jsx)(n.code,{children:"$sum"})," operator, and computes the average likes using the ",(0,i.jsx)(n.code,{children:"$avg"})," operator."]})]})}function g(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},8731:(e,n,t)=>{t.d(n,{A:()=>r});t(6540);var s=t(6025),i=t(4848);const r=e=>{let{name:n,description:t,children:r}=e;const o=(0,s.Ay)(`/images/${n}.jpg`);return(0,i.jsxs)("div",{style:{display:"inline-block",height:"150px",width:"100%",position:"relative",overflow:"hidden",borderRadius:"5px"},children:[(0,i.jsx)("img",{src:o,alt:o,style:{width:"100%",height:"100%",objectFit:"cover",position:"absolute",zIndex:-1}}),(0,i.jsx)("h2",{style:{color:"white",padding:"12px",boxSizing:"border-box",paddingBottom:"0px",fontWeight:"500"},children:r}),(0,i.jsx)("p",{style:{color:"white",paddingTop:"0px",paddingBottom:"12px",paddingLeft:"12px",paddingRight:"12px",boxSizing:"border-box"},children:t})]})}},8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>a});var s=t(6540);const i={},r=s.createContext(i);function o(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);